<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="757.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="464246"><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (84 samples, 0.02%)</title><rect x="0.0108%" y="485" width="0.0181%" height="15" fill="rgb(227,0,7)" fg:x="50" fg:w="84"/><text x="0.2608%" y="495.50"></text></g><g><title>AppKit`-[NSEvent copyWithZone:] (60 samples, 0.01%)</title><rect x="0.0308%" y="469" width="0.0129%" height="15" fill="rgb(217,0,24)" fg:x="143" fg:w="60"/><text x="0.2808%" y="479.50"></text></g><g><title>AppKit`-[NSEvent _eventRelativeToWindow:] (78 samples, 0.02%)</title><rect x="0.0308%" y="485" width="0.0168%" height="15" fill="rgb(221,193,54)" fg:x="143" fg:w="78"/><text x="0.2808%" y="495.50"></text></g><g><title>gen`gen::update (76 samples, 0.02%)</title><rect x="0.0633%" y="101" width="0.0164%" height="15" fill="rgb(248,212,6)" fg:x="294" fg:w="76"/><text x="0.3133%" y="111.50"></text></g><g><title>gen`nannou::app::apply_update (90 samples, 0.02%)</title><rect x="0.0631%" y="117" width="0.0194%" height="15" fill="rgb(208,68,35)" fg:x="293" fg:w="90"/><text x="0.3131%" y="127.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (113 samples, 0.02%)</title><rect x="0.0584%" y="261" width="0.0243%" height="15" fill="rgb(232,128,0)" fg:x="271" fg:w="113"/><text x="0.3084%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (113 samples, 0.02%)</title><rect x="0.0584%" y="245" width="0.0243%" height="15" fill="rgb(207,160,47)" fg:x="271" fg:w="113"/><text x="0.3084%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (113 samples, 0.02%)</title><rect x="0.0584%" y="229" width="0.0243%" height="15" fill="rgb(228,23,34)" fg:x="271" fg:w="113"/><text x="0.3084%" y="239.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (113 samples, 0.02%)</title><rect x="0.0584%" y="213" width="0.0243%" height="15" fill="rgb(218,30,26)" fg:x="271" fg:w="113"/><text x="0.3084%" y="223.50"></text></g><g><title>gen`winit::platform_impl::platform::observer::control_flow_end_handler (113 samples, 0.02%)</title><rect x="0.0584%" y="197" width="0.0243%" height="15" fill="rgb(220,122,19)" fg:x="271" fg:w="113"/><text x="0.3084%" y="207.50"></text></g><g><title>gen`winit::platform_impl::platform::app_state::AppState::cleared (113 samples, 0.02%)</title><rect x="0.0584%" y="181" width="0.0243%" height="15" fill="rgb(250,228,42)" fg:x="271" fg:w="113"/><text x="0.3084%" y="191.50"></text></g><g><title>gen`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (113 samples, 0.02%)</title><rect x="0.0584%" y="165" width="0.0243%" height="15" fill="rgb(240,193,28)" fg:x="271" fg:w="113"/><text x="0.3084%" y="175.50"></text></g><g><title>gen`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (113 samples, 0.02%)</title><rect x="0.0584%" y="149" width="0.0243%" height="15" fill="rgb(216,20,37)" fg:x="271" fg:w="113"/><text x="0.3084%" y="159.50"></text></g><g><title>gen`nannou::app::run_loop::_{{closure}} (113 samples, 0.02%)</title><rect x="0.0584%" y="133" width="0.0243%" height="15" fill="rgb(206,188,39)" fg:x="271" fg:w="113"/><text x="0.3084%" y="143.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (116 samples, 0.02%)</title><rect x="0.0582%" y="341" width="0.0250%" height="15" fill="rgb(217,207,13)" fg:x="270" fg:w="116"/><text x="0.3082%" y="351.50"></text></g><g><title>AppKit`_DPSNextEvent (116 samples, 0.02%)</title><rect x="0.0582%" y="325" width="0.0250%" height="15" fill="rgb(231,73,38)" fg:x="270" fg:w="116"/><text x="0.3082%" y="335.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (116 samples, 0.02%)</title><rect x="0.0582%" y="309" width="0.0250%" height="15" fill="rgb(225,20,46)" fg:x="270" fg:w="116"/><text x="0.3082%" y="319.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (116 samples, 0.02%)</title><rect x="0.0582%" y="293" width="0.0250%" height="15" fill="rgb(210,31,41)" fg:x="270" fg:w="116"/><text x="0.3082%" y="303.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (116 samples, 0.02%)</title><rect x="0.0582%" y="277" width="0.0250%" height="15" fill="rgb(221,200,47)" fg:x="270" fg:w="116"/><text x="0.3082%" y="287.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (119 samples, 0.03%)</title><rect x="0.0579%" y="437" width="0.0256%" height="15" fill="rgb(226,26,5)" fg:x="269" fg:w="119"/><text x="0.3079%" y="447.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (119 samples, 0.03%)</title><rect x="0.0579%" y="421" width="0.0256%" height="15" fill="rgb(249,33,26)" fg:x="269" fg:w="119"/><text x="0.3079%" y="431.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (119 samples, 0.03%)</title><rect x="0.0579%" y="405" width="0.0256%" height="15" fill="rgb(235,183,28)" fg:x="269" fg:w="119"/><text x="0.3079%" y="415.50"></text></g><g><title>AppKit`NSControlTrackMouse (119 samples, 0.03%)</title><rect x="0.0579%" y="389" width="0.0256%" height="15" fill="rgb(221,5,38)" fg:x="269" fg:w="119"/><text x="0.3079%" y="399.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (118 samples, 0.03%)</title><rect x="0.0582%" y="373" width="0.0254%" height="15" fill="rgb(247,18,42)" fg:x="270" fg:w="118"/><text x="0.3082%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (118 samples, 0.03%)</title><rect x="0.0582%" y="357" width="0.0254%" height="15" fill="rgb(241,131,45)" fg:x="270" fg:w="118"/><text x="0.3082%" y="367.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (120 samples, 0.03%)</title><rect x="0.0579%" y="453" width="0.0258%" height="15" fill="rgb(249,31,29)" fg:x="269" fg:w="120"/><text x="0.3079%" y="463.50"></text></g><g><title>gen`winit::platform_impl::platform::view::mouse_motion (71 samples, 0.02%)</title><rect x="0.0844%" y="453" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="392" fg:w="71"/><text x="0.3344%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (213 samples, 0.05%)</title><rect x="0.0549%" y="469" width="0.0459%" height="15" fill="rgb(238,160,17)" fg:x="255" fg:w="213"/><text x="0.3049%" y="479.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (251 samples, 0.05%)</title><rect x="0.0504%" y="485" width="0.0541%" height="15" fill="rgb(214,148,48)" fg:x="234" fg:w="251"/><text x="0.3004%" y="495.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (512 samples, 0.11%)</title><rect x="0.0080%" y="501" width="0.1103%" height="15" fill="rgb(232,36,49)" fg:x="37" fg:w="512"/><text x="0.2580%" y="511.50"></text></g><g><title>gen`winit::platform_impl::platform::app::send_event (602 samples, 0.13%)</title><rect x="0.0071%" y="517" width="0.1297%" height="15" fill="rgb(209,103,24)" fg:x="33" fg:w="602"/><text x="0.2571%" y="527.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (645 samples, 0.14%)</title><rect x="0.0015%" y="533" width="0.1389%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="645"/><text x="0.2515%" y="543.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (69 samples, 0.01%)</title><rect x="0.1441%" y="517" width="0.0149%" height="15" fill="rgb(213,181,19)" fg:x="669" fg:w="69"/><text x="0.3941%" y="527.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (62 samples, 0.01%)</title><rect x="0.1598%" y="453" width="0.0134%" height="15" fill="rgb(254,191,54)" fg:x="742" fg:w="62"/><text x="0.4098%" y="463.50"></text></g><g><title>SkyLight`event_finalize(void const*) (72 samples, 0.02%)</title><rect x="0.1596%" y="469" width="0.0155%" height="15" fill="rgb(241,83,37)" fg:x="741" fg:w="72"/><text x="0.4096%" y="479.50"></text></g><g><title>CoreFoundation`_CFRelease (84 samples, 0.02%)</title><rect x="0.1590%" y="485" width="0.0181%" height="15" fill="rgb(233,36,39)" fg:x="738" fg:w="84"/><text x="0.4090%" y="495.50"></text></g><g><title>HIToolbox`ReleaseEvent (96 samples, 0.02%)</title><rect x="0.1590%" y="501" width="0.0207%" height="15" fill="rgb(226,3,54)" fg:x="738" fg:w="96"/><text x="0.4090%" y="511.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (101 samples, 0.02%)</title><rect x="0.1590%" y="517" width="0.0218%" height="15" fill="rgb(245,192,40)" fg:x="738" fg:w="101"/><text x="0.4090%" y="527.50"></text></g><g><title>SkyLight`_CGSFindWindow (94 samples, 0.02%)</title><rect x="0.2107%" y="325" width="0.0202%" height="15" fill="rgb(238,167,29)" fg:x="978" fg:w="94"/><text x="0.4607%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (90 samples, 0.02%)</title><rect x="0.2115%" y="309" width="0.0194%" height="15" fill="rgb(232,182,51)" fg:x="982" fg:w="90"/><text x="0.4615%" y="319.50"></text></g><g><title>SkyLight`SLSFindWindowAndOwner (120 samples, 0.03%)</title><rect x="0.2053%" y="341" width="0.0258%" height="15" fill="rgb(231,60,39)" fg:x="953" fg:w="120"/><text x="0.4553%" y="351.50"></text></g><g><title>HIToolbox`SafelyFindCGSWindowAndOwner(unsigned int, unsigned int, int, bool, CGPoint const*, CGPoint*, unsigned int*, unsigned int*) (125 samples, 0.03%)</title><rect x="0.2051%" y="357" width="0.0269%" height="15" fill="rgb(208,69,12)" fg:x="952" fg:w="125"/><text x="0.4551%" y="367.50"></text></g><g><title>HIToolbox`FindPlatformWindow (143 samples, 0.03%)</title><rect x="0.2036%" y="373" width="0.0308%" height="15" fill="rgb(235,93,37)" fg:x="945" fg:w="143"/><text x="0.4536%" y="383.50"></text></g><g><title>SkyLight`SLSManagedDisplayGetCurrentSpace (194 samples, 0.04%)</title><rect x="0.2600%" y="229" width="0.0418%" height="15" fill="rgb(213,116,39)" fg:x="1207" fg:w="194"/><text x="0.5100%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (148 samples, 0.03%)</title><rect x="0.2699%" y="213" width="0.0319%" height="15" fill="rgb(222,207,29)" fg:x="1253" fg:w="148"/><text x="0.5199%" y="223.50"></text></g><g><title>HIToolbox`GetCurrentSpaceForDisplay (267 samples, 0.06%)</title><rect x="0.2453%" y="245" width="0.0575%" height="15" fill="rgb(206,96,30)" fg:x="1139" fg:w="267"/><text x="0.4953%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (116 samples, 0.02%)</title><rect x="0.3212%" y="229" width="0.0250%" height="15" fill="rgb(218,138,4)" fg:x="1491" fg:w="116"/><text x="0.5712%" y="239.50"></text></g><g><title>SkyLight`SLSSpaceGetType (127 samples, 0.03%)</title><rect x="0.3190%" y="245" width="0.0274%" height="15" fill="rgb(250,191,14)" fg:x="1481" fg:w="127"/><text x="0.5690%" y="255.50"></text></g><g><title>HIToolbox`invocation function for block in MenuBarInstance::ForEachBoundsDo(bool  (474 samples, 0.10%)</title><rect x="0.2445%" y="261" width="0.1021%" height="15" fill="rgb(239,60,40)" fg:x="1135" fg:w="474"/><text x="0.4945%" y="271.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (518 samples, 0.11%)</title><rect x="0.2367%" y="277" width="0.1116%" height="15" fill="rgb(206,27,48)" fg:x="1099" fg:w="518"/><text x="0.4867%" y="287.50"></text></g><g><title>HIToolbox`MenuBarInstance::ContainsPoint (525 samples, 0.11%)</title><rect x="0.2361%" y="293" width="0.1131%" height="15" fill="rgb(225,35,8)" fg:x="1096" fg:w="525"/><text x="0.4861%" y="303.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachMenuBarDo(void  (530 samples, 0.11%)</title><rect x="0.2354%" y="325" width="0.1142%" height="15" fill="rgb(250,213,24)" fg:x="1093" fg:w="530"/><text x="0.4854%" y="335.50"></text></g><g><title>HIToolbox`___HIPresentationInstanceFindAtLocation_block_invoke (529 samples, 0.11%)</title><rect x="0.2357%" y="309" width="0.1139%" height="15" fill="rgb(247,123,22)" fg:x="1094" fg:w="529"/><text x="0.4857%" y="319.50"></text></g><g><title>HIToolbox`MBarHit (537 samples, 0.12%)</title><rect x="0.2344%" y="373" width="0.1157%" height="15" fill="rgb(231,138,38)" fg:x="1088" fg:w="537"/><text x="0.4844%" y="383.50"></text></g><g><title>HIToolbox`_MBarHit(MenuData*, Point, unsigned char, unsigned char*, MenuData**) (537 samples, 0.12%)</title><rect x="0.2344%" y="357" width="0.1157%" height="15" fill="rgb(231,145,46)" fg:x="1088" fg:w="537"/><text x="0.4844%" y="367.50"></text></g><g><title>HIToolbox`_HIPresentationInstanceFindAtLocation (534 samples, 0.12%)</title><rect x="0.2350%" y="341" width="0.1150%" height="15" fill="rgb(251,118,11)" fg:x="1091" fg:w="534"/><text x="0.4850%" y="351.50"></text></g><g><title>HIToolbox`FindWindow (687 samples, 0.15%)</title><rect x="0.2023%" y="421" width="0.1480%" height="15" fill="rgb(217,147,25)" fg:x="939" fg:w="687"/><text x="0.4523%" y="431.50"></text></g><g><title>HIToolbox`FindWindowOfClass (686 samples, 0.15%)</title><rect x="0.2025%" y="405" width="0.1478%" height="15" fill="rgb(247,81,37)" fg:x="940" fg:w="686"/><text x="0.4525%" y="415.50"></text></g><g><title>HIToolbox`FindWindowCommon(Point, OpaqueWindowPtr**, short*) (686 samples, 0.15%)</title><rect x="0.2025%" y="389" width="0.1478%" height="15" fill="rgb(209,12,38)" fg:x="940" fg:w="686"/><text x="0.4525%" y="399.50"></text></g><g><title>HIToolbox`FindWindowAndPartFromMouseEvent (688 samples, 0.15%)</title><rect x="0.2023%" y="437" width="0.1482%" height="15" fill="rgb(227,1,9)" fg:x="939" fg:w="688"/><text x="0.4523%" y="447.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (764 samples, 0.16%)</title><rect x="0.1975%" y="469" width="0.1646%" height="15" fill="rgb(248,47,43)" fg:x="917" fg:w="764"/><text x="0.4475%" y="479.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (751 samples, 0.16%)</title><rect x="0.2003%" y="453" width="0.1618%" height="15" fill="rgb(221,10,30)" fg:x="930" fg:w="751"/><text x="0.4503%" y="463.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (783 samples, 0.17%)</title><rect x="0.1962%" y="501" width="0.1687%" height="15" fill="rgb(210,229,1)" fg:x="911" fg:w="783"/><text x="0.4462%" y="511.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (781 samples, 0.17%)</title><rect x="0.1967%" y="485" width="0.1682%" height="15" fill="rgb(222,148,37)" fg:x="913" fg:w="781"/><text x="0.4467%" y="495.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (852 samples, 0.18%)</title><rect x="0.1852%" y="517" width="0.1835%" height="15" fill="rgb(234,67,33)" fg:x="860" fg:w="852"/><text x="0.4352%" y="527.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (197 samples, 0.04%)</title><rect x="0.4211%" y="341" width="0.0424%" height="15" fill="rgb(247,98,35)" fg:x="1955" fg:w="197"/><text x="0.6711%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (196 samples, 0.04%)</title><rect x="0.4213%" y="325" width="0.0422%" height="15" fill="rgb(247,138,52)" fg:x="1956" fg:w="196"/><text x="0.6713%" y="335.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (208 samples, 0.04%)</title><rect x="0.4209%" y="357" width="0.0448%" height="15" fill="rgb(213,79,30)" fg:x="1954" fg:w="208"/><text x="0.6709%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (90 samples, 0.02%)</title><rect x="0.4713%" y="357" width="0.0194%" height="15" fill="rgb(246,177,23)" fg:x="2188" fg:w="90"/><text x="0.7213%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (87 samples, 0.02%)</title><rect x="0.4719%" y="341" width="0.0187%" height="15" fill="rgb(230,62,27)" fg:x="2191" fg:w="87"/><text x="0.7219%" y="351.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (405 samples, 0.09%)</title><rect x="0.4097%" y="373" width="0.0872%" height="15" fill="rgb(216,154,8)" fg:x="1902" fg:w="405"/><text x="0.6597%" y="383.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (487 samples, 0.10%)</title><rect x="0.4088%" y="389" width="0.1049%" height="15" fill="rgb(244,35,45)" fg:x="1898" fg:w="487"/><text x="0.6588%" y="399.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (507 samples, 0.11%)</title><rect x="0.4063%" y="405" width="0.1092%" height="15" fill="rgb(251,115,12)" fg:x="1886" fg:w="507"/><text x="0.6563%" y="415.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (515 samples, 0.11%)</title><rect x="0.4056%" y="421" width="0.1109%" height="15" fill="rgb(240,54,50)" fg:x="1883" fg:w="515"/><text x="0.6556%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (536 samples, 0.12%)</title><rect x="0.4034%" y="437" width="0.1155%" height="15" fill="rgb(233,84,52)" fg:x="1873" fg:w="536"/><text x="0.6534%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (73 samples, 0.02%)</title><rect x="0.5357%" y="421" width="0.0157%" height="15" fill="rgb(207,117,47)" fg:x="2487" fg:w="73"/><text x="0.7857%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (53 samples, 0.01%)</title><rect x="0.5738%" y="341" width="0.0114%" height="15" fill="rgb(249,43,39)" fg:x="2664" fg:w="53"/><text x="0.8238%" y="351.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (67 samples, 0.01%)</title><rect x="0.5885%" y="341" width="0.0144%" height="15" fill="rgb(209,38,44)" fg:x="2732" fg:w="67"/><text x="0.8385%" y="351.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (202 samples, 0.04%)</title><rect x="0.5650%" y="357" width="0.0435%" height="15" fill="rgb(236,212,23)" fg:x="2623" fg:w="202"/><text x="0.8150%" y="367.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (258 samples, 0.06%)</title><rect x="0.5646%" y="373" width="0.0556%" height="15" fill="rgb(242,79,21)" fg:x="2621" fg:w="258"/><text x="0.8146%" y="383.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (282 samples, 0.06%)</title><rect x="0.5641%" y="389" width="0.0607%" height="15" fill="rgb(211,96,35)" fg:x="2619" fg:w="282"/><text x="0.8141%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (60 samples, 0.01%)</title><rect x="0.7500%" y="165" width="0.0129%" height="15" fill="rgb(253,215,40)" fg:x="3482" fg:w="60"/><text x="1.0000%" y="175.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer commit] (170 samples, 0.04%)</title><rect x="0.7378%" y="181" width="0.0366%" height="15" fill="rgb(211,81,21)" fg:x="3425" fg:w="170"/><text x="0.9878%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (182 samples, 0.04%)</title><rect x="0.7358%" y="197" width="0.0392%" height="15" fill="rgb(208,190,38)" fg:x="3416" fg:w="182"/><text x="0.9858%" y="207.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (222 samples, 0.05%)</title><rect x="0.7345%" y="213" width="0.0478%" height="15" fill="rgb(235,213,38)" fg:x="3410" fg:w="222"/><text x="0.9845%" y="223.50"></text></g><g><title>gen`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (243 samples, 0.05%)</title><rect x="0.7343%" y="229" width="0.0523%" height="15" fill="rgb(237,122,38)" fg:x="3409" fg:w="243"/><text x="0.9843%" y="239.50"></text></g><g><title>gen`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (51 samples, 0.01%)</title><rect x="0.7974%" y="229" width="0.0110%" height="15" fill="rgb(244,218,35)" fg:x="3702" fg:w="51"/><text x="1.0474%" y="239.50"></text></g><g><title>gen`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (48 samples, 0.01%)</title><rect x="0.7981%" y="213" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="3705" fg:w="48"/><text x="1.0481%" y="223.50"></text></g><g><title>IOKit`io_connect_method (1,787 samples, 0.38%)</title><rect x="0.8523%" y="117" width="0.3849%" height="15" fill="rgb(210,16,53)" fg:x="3957" fg:w="1787"/><text x="1.1023%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,773 samples, 0.38%)</title><rect x="0.8554%" y="101" width="0.3819%" height="15" fill="rgb(235,124,12)" fg:x="3971" fg:w="1773"/><text x="1.1054%" y="111.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (1,848 samples, 0.40%)</title><rect x="0.8405%" y="149" width="0.3981%" height="15" fill="rgb(224,169,11)" fg:x="3902" fg:w="1848"/><text x="1.0905%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (1,796 samples, 0.39%)</title><rect x="0.8517%" y="133" width="0.3869%" height="15" fill="rgb(250,166,2)" fg:x="3954" fg:w="1796"/><text x="1.1017%" y="143.50"></text></g><g><title>CoreFoundation`_CFRelease (1,926 samples, 0.41%)</title><rect x="0.8351%" y="165" width="0.4149%" height="15" fill="rgb(242,216,29)" fg:x="3877" fg:w="1926"/><text x="1.0851%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.01%)</title><rect x="1.2386%" y="149" width="0.0114%" height="15" fill="rgb(230,116,27)" fg:x="5750" fg:w="53"/><text x="1.4886%" y="159.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (71 samples, 0.02%)</title><rect x="1.2504%" y="165" width="0.0153%" height="15" fill="rgb(228,99,48)" fg:x="5805" fg:w="71"/><text x="1.5004%" y="175.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (2,066 samples, 0.45%)</title><rect x="0.8269%" y="181" width="0.4450%" height="15" fill="rgb(253,11,6)" fg:x="3839" fg:w="2066"/><text x="1.0769%" y="191.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (2,134 samples, 0.46%)</title><rect x="0.8215%" y="197" width="0.4597%" height="15" fill="rgb(247,143,39)" fg:x="3814" fg:w="2134"/><text x="1.0715%" y="207.50"></text></g><g><title>gen`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (2,191 samples, 0.47%)</title><rect x="0.8125%" y="213" width="0.4719%" height="15" fill="rgb(236,97,10)" fg:x="3772" fg:w="2191"/><text x="1.0625%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer deleteContextStateDescriptor:] (62 samples, 0.01%)</title><rect x="1.2928%" y="165" width="0.0134%" height="15" fill="rgb(233,208,19)" fg:x="6002" fg:w="62"/><text x="1.5428%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::terminate (109 samples, 0.02%)</title><rect x="1.3062%" y="165" width="0.0235%" height="15" fill="rgb(216,164,2)" fg:x="6064" fg:w="109"/><text x="1.5562%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (88 samples, 0.02%)</title><rect x="1.3107%" y="149" width="0.0190%" height="15" fill="rgb(220,129,5)" fg:x="6085" fg:w="88"/><text x="1.5607%" y="159.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (52 samples, 0.01%)</title><rect x="1.3497%" y="133" width="0.0112%" height="15" fill="rgb(242,17,10)" fg:x="6266" fg:w="52"/><text x="1.5997%" y="143.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (149 samples, 0.03%)</title><rect x="1.3387%" y="149" width="0.0321%" height="15" fill="rgb(242,107,0)" fg:x="6215" fg:w="149"/><text x="1.5887%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (200 samples, 0.04%)</title><rect x="1.3349%" y="165" width="0.0431%" height="15" fill="rgb(251,28,31)" fg:x="6197" fg:w="200"/><text x="1.5849%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (53 samples, 0.01%)</title><rect x="1.3835%" y="165" width="0.0114%" height="15" fill="rgb(233,223,10)" fg:x="6423" fg:w="53"/><text x="1.6335%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (488 samples, 0.11%)</title><rect x="1.2911%" y="181" width="0.1051%" height="15" fill="rgb(215,21,27)" fg:x="5994" fg:w="488"/><text x="1.5411%" y="191.50"></text></g><g><title>gen`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (501 samples, 0.11%)</title><rect x="1.2898%" y="197" width="0.1079%" height="15" fill="rgb(232,23,21)" fg:x="5988" fg:w="501"/><text x="1.5398%" y="207.50"></text></g><g><title>gen`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (563 samples, 0.12%)</title><rect x="1.2853%" y="213" width="0.1213%" height="15" fill="rgb(244,5,23)" fg:x="5967" fg:w="563"/><text x="1.5353%" y="223.50"></text></g><g><title>gen`wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (54 samples, 0.01%)</title><rect x="1.4204%" y="197" width="0.0116%" height="15" fill="rgb(226,81,46)" fg:x="6594" fg:w="54"/><text x="1.6704%" y="207.50"></text></g><g><title>gen`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (128 samples, 0.03%)</title><rect x="1.4066%" y="213" width="0.0276%" height="15" fill="rgb(247,70,30)" fg:x="6530" fg:w="128"/><text x="1.6566%" y="223.50"></text></g><g><title>gen`wgpu_core::device::Device&lt;A&gt;::maintain (2,958 samples, 0.64%)</title><rect x="0.8084%" y="229" width="0.6372%" height="15" fill="rgb(212,68,19)" fg:x="3753" fg:w="2958"/><text x="1.0584%" y="239.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (62 samples, 0.01%)</title><rect x="1.4671%" y="229" width="0.0134%" height="15" fill="rgb(240,187,13)" fg:x="6811" fg:w="62"/><text x="1.7171%" y="239.50"></text></g><g><title>gen`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (3,580 samples, 0.77%)</title><rect x="0.7156%" y="245" width="0.7711%" height="15" fill="rgb(223,113,26)" fg:x="3322" fg:w="3580"/><text x="0.9656%" y="255.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (3,640 samples, 0.78%)</title><rect x="0.7052%" y="261" width="0.7841%" height="15" fill="rgb(206,192,2)" fg:x="3274" fg:w="3640"/><text x="0.9552%" y="271.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (51 samples, 0.01%)</title><rect x="1.5042%" y="197" width="0.0110%" height="15" fill="rgb(241,108,4)" fg:x="6983" fg:w="51"/><text x="1.7542%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (51 samples, 0.01%)</title><rect x="1.5042%" y="181" width="0.0110%" height="15" fill="rgb(247,173,49)" fg:x="6983" fg:w="51"/><text x="1.7542%" y="191.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (77 samples, 0.02%)</title><rect x="1.4988%" y="213" width="0.0166%" height="15" fill="rgb(224,114,35)" fg:x="6958" fg:w="77"/><text x="1.7488%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (60 samples, 0.01%)</title><rect x="1.5487%" y="101" width="0.0129%" height="15" fill="rgb(245,159,27)" fg:x="7190" fg:w="60"/><text x="1.7987%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (64 samples, 0.01%)</title><rect x="1.5487%" y="117" width="0.0138%" height="15" fill="rgb(245,172,44)" fg:x="7190" fg:w="64"/><text x="1.7987%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (139 samples, 0.03%)</title><rect x="1.5328%" y="133" width="0.0299%" height="15" fill="rgb(236,23,11)" fg:x="7116" fg:w="139"/><text x="1.7828%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (199 samples, 0.04%)</title><rect x="1.5231%" y="149" width="0.0429%" height="15" fill="rgb(205,117,38)" fg:x="7071" fg:w="199"/><text x="1.7731%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (218 samples, 0.05%)</title><rect x="1.5199%" y="165" width="0.0470%" height="15" fill="rgb(237,72,25)" fg:x="7056" fg:w="218"/><text x="1.7699%" y="175.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (266 samples, 0.06%)</title><rect x="1.5192%" y="181" width="0.0573%" height="15" fill="rgb(244,70,9)" fg:x="7053" fg:w="266"/><text x="1.7692%" y="191.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (291 samples, 0.06%)</title><rect x="1.5154%" y="213" width="0.0627%" height="15" fill="rgb(217,125,39)" fg:x="7035" fg:w="291"/><text x="1.7654%" y="223.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (282 samples, 0.06%)</title><rect x="1.5173%" y="197" width="0.0607%" height="15" fill="rgb(235,36,10)" fg:x="7044" fg:w="282"/><text x="1.7673%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (57 samples, 0.01%)</title><rect x="1.5785%" y="213" width="0.0123%" height="15" fill="rgb(251,123,47)" fg:x="7328" fg:w="57"/><text x="1.8285%" y="223.50"></text></g><g><title>gen`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (469 samples, 0.10%)</title><rect x="1.4917%" y="229" width="0.1010%" height="15" fill="rgb(221,13,13)" fg:x="6925" fg:w="469"/><text x="1.7417%" y="239.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (474 samples, 0.10%)</title><rect x="1.4908%" y="245" width="0.1021%" height="15" fill="rgb(238,131,9)" fg:x="6921" fg:w="474"/><text x="1.7408%" y="255.50"></text></g><g><title>gen`nannou_wgpu::resolve_texture (502 samples, 0.11%)</title><rect x="1.4902%" y="261" width="0.1081%" height="15" fill="rgb(211,50,8)" fg:x="6918" fg:w="502"/><text x="1.7402%" y="271.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (89 samples, 0.02%)</title><rect x="1.6050%" y="213" width="0.0192%" height="15" fill="rgb(245,182,24)" fg:x="7451" fg:w="89"/><text x="1.8550%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (85 samples, 0.02%)</title><rect x="1.6058%" y="197" width="0.0183%" height="15" fill="rgb(242,14,37)" fg:x="7455" fg:w="85"/><text x="1.8558%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (83 samples, 0.02%)</title><rect x="1.6063%" y="181" width="0.0179%" height="15" fill="rgb(246,228,12)" fg:x="7457" fg:w="83"/><text x="1.8563%" y="191.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (63 samples, 0.01%)</title><rect x="1.6328%" y="213" width="0.0136%" height="15" fill="rgb(213,55,15)" fg:x="7580" fg:w="63"/><text x="1.8828%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (71 samples, 0.02%)</title><rect x="1.6640%" y="101" width="0.0153%" height="15" fill="rgb(209,9,3)" fg:x="7725" fg:w="71"/><text x="1.9140%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (117 samples, 0.03%)</title><rect x="1.6638%" y="117" width="0.0252%" height="15" fill="rgb(230,59,30)" fg:x="7724" fg:w="117"/><text x="1.9138%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (48 samples, 0.01%)</title><rect x="1.6890%" y="101" width="0.0103%" height="15" fill="rgb(209,121,21)" fg:x="7841" fg:w="48"/><text x="1.9390%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (195 samples, 0.04%)</title><rect x="1.6580%" y="133" width="0.0420%" height="15" fill="rgb(220,109,13)" fg:x="7697" fg:w="195"/><text x="1.9080%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (51 samples, 0.01%)</title><rect x="1.6890%" y="117" width="0.0110%" height="15" fill="rgb(232,18,1)" fg:x="7841" fg:w="51"/><text x="1.9390%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (229 samples, 0.05%)</title><rect x="1.6524%" y="149" width="0.0493%" height="15" fill="rgb(215,41,42)" fg:x="7671" fg:w="229"/><text x="1.9024%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (242 samples, 0.05%)</title><rect x="1.6502%" y="165" width="0.0521%" height="15" fill="rgb(224,123,36)" fg:x="7661" fg:w="242"/><text x="1.9002%" y="175.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (273 samples, 0.06%)</title><rect x="1.6502%" y="181" width="0.0588%" height="15" fill="rgb(240,125,3)" fg:x="7661" fg:w="273"/><text x="1.9002%" y="191.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (292 samples, 0.06%)</title><rect x="1.6463%" y="213" width="0.0629%" height="15" fill="rgb(205,98,50)" fg:x="7643" fg:w="292"/><text x="1.8963%" y="223.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (276 samples, 0.06%)</title><rect x="1.6498%" y="197" width="0.0595%" height="15" fill="rgb(205,185,37)" fg:x="7659" fg:w="276"/><text x="1.8998%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (57 samples, 0.01%)</title><rect x="1.7191%" y="197" width="0.0123%" height="15" fill="rgb(238,207,15)" fg:x="7981" fg:w="57"/><text x="1.9691%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (73 samples, 0.02%)</title><rect x="1.7187%" y="213" width="0.0157%" height="15" fill="rgb(213,199,42)" fg:x="7979" fg:w="73"/><text x="1.9687%" y="223.50"></text></g><g><title>gen`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (678 samples, 0.15%)</title><rect x="1.6002%" y="229" width="0.1460%" height="15" fill="rgb(235,201,11)" fg:x="7429" fg:w="678"/><text x="1.8502%" y="239.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (687 samples, 0.15%)</title><rect x="1.5987%" y="245" width="0.1480%" height="15" fill="rgb(207,46,11)" fg:x="7422" fg:w="687"/><text x="1.8487%" y="255.50"></text></g><g><title>gen`nannou_wgpu::texture::reshaper::Reshaper::encode_render_pass (708 samples, 0.15%)</title><rect x="1.5983%" y="261" width="0.1525%" height="15" fill="rgb(241,35,35)" fg:x="7420" fg:w="708"/><text x="1.8483%" y="271.50"></text></g><g><title>gen`nannou::frame::Frame::submit_inner (4,890 samples, 1.05%)</title><rect x="0.7007%" y="277" width="1.0533%" height="15" fill="rgb(243,32,47)" fg:x="3253" fg:w="4890"/><text x="0.9507%" y="287.50"></text></g><g><title>gen`core::ptr::drop_in_place&lt;nannou::frame::Frame&gt; (4,895 samples, 1.05%)</title><rect x="0.7003%" y="293" width="1.0544%" height="15" fill="rgb(247,202,23)" fg:x="3251" fg:w="4895"/><text x="0.9503%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1,304 samples, 0.28%)</title><rect x="14.7219%" y="245" width="0.2809%" height="15" fill="rgb(219,102,11)" fg:x="68346" fg:w="1304"/><text x="14.9719%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1,301 samples, 0.28%)</title><rect x="14.7226%" y="229" width="0.2802%" height="15" fill="rgb(243,110,44)" fg:x="68349" fg:w="1301"/><text x="14.9726%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1,318 samples, 0.28%)</title><rect x="14.7209%" y="277" width="0.2839%" height="15" fill="rgb(222,74,54)" fg:x="68341" fg:w="1318"/><text x="14.9709%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,316 samples, 0.28%)</title><rect x="14.7213%" y="261" width="0.2835%" height="15" fill="rgb(216,99,12)" fg:x="68343" fg:w="1316"/><text x="14.9713%" y="271.50"></text></g><g><title>gen`image::buffer_::ImageBuffer&lt;P,alloc::vec::Vec&lt;&lt;P as image::traits::Pixel&gt;::Subpixel&gt;&gt;::from_fn (61,499 samples, 13.25%)</title><rect x="1.7579%" y="293" width="13.2471%" height="15" fill="rgb(226,22,26)" fg:x="8161" fg:w="61499"/><text x="2.0079%" y="303.50">gen`image::buffer_::..</text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBufferInternal (53 samples, 0.01%)</title><rect x="15.0491%" y="149" width="0.0114%" height="15" fill="rgb(217,163,10)" fg:x="69865" fg:w="53"/><text x="15.2991%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBuffer (65 samples, 0.01%)</title><rect x="15.0478%" y="165" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="69859" fg:w="65"/><text x="15.2978%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (73 samples, 0.02%)</title><rect x="15.0463%" y="181" width="0.0157%" height="15" fill="rgb(252,105,26)" fg:x="69852" fg:w="73"/><text x="15.2963%" y="191.50"></text></g><g><title>gen`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (76 samples, 0.02%)</title><rect x="15.0459%" y="197" width="0.0164%" height="15" fill="rgb(220,39,43)" fg:x="69850" fg:w="76"/><text x="15.2959%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (47 samples, 0.01%)</title><rect x="15.0631%" y="149" width="0.0101%" height="15" fill="rgb(229,68,48)" fg:x="69930" fg:w="47"/><text x="15.3131%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (49 samples, 0.01%)</title><rect x="15.0629%" y="165" width="0.0106%" height="15" fill="rgb(252,8,32)" fg:x="69929" fg:w="49"/><text x="15.3129%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (58 samples, 0.01%)</title><rect x="15.0629%" y="181" width="0.0125%" height="15" fill="rgb(223,20,43)" fg:x="69929" fg:w="58"/><text x="15.3129%" y="191.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (87 samples, 0.02%)</title><rect x="15.0627%" y="197" width="0.0187%" height="15" fill="rgb(229,81,49)" fg:x="69928" fg:w="87"/><text x="15.3127%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (51 samples, 0.01%)</title><rect x="15.0830%" y="149" width="0.0110%" height="15" fill="rgb(236,28,36)" fg:x="70022" fg:w="51"/><text x="15.3330%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (76 samples, 0.02%)</title><rect x="15.0821%" y="165" width="0.0164%" height="15" fill="rgb(249,185,26)" fg:x="70018" fg:w="76"/><text x="15.3321%" y="175.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (83 samples, 0.02%)</title><rect x="15.0819%" y="181" width="0.0179%" height="15" fill="rgb(249,174,33)" fg:x="70017" fg:w="83"/><text x="15.3319%" y="191.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (87 samples, 0.02%)</title><rect x="15.0814%" y="197" width="0.0187%" height="15" fill="rgb(233,201,37)" fg:x="70015" fg:w="87"/><text x="15.3314%" y="207.50"></text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (286 samples, 0.06%)</title><rect x="15.0407%" y="213" width="0.0616%" height="15" fill="rgb(221,78,26)" fg:x="69826" fg:w="286"/><text x="15.2907%" y="223.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (300 samples, 0.06%)</title><rect x="15.0390%" y="229" width="0.0646%" height="15" fill="rgb(250,127,30)" fg:x="69818" fg:w="300"/><text x="15.2890%" y="239.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (52 samples, 0.01%)</title><rect x="15.1456%" y="69" width="0.0112%" height="15" fill="rgb(230,49,44)" fg:x="70313" fg:w="52"/><text x="15.3956%" y="79.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (47 samples, 0.01%)</title><rect x="15.1467%" y="53" width="0.0101%" height="15" fill="rgb(229,67,23)" fg:x="70318" fg:w="47"/><text x="15.3967%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4,314 samples, 0.93%)</title><rect x="15.1672%" y="37" width="0.9292%" height="15" fill="rgb(249,83,47)" fg:x="70413" fg:w="4314"/><text x="15.4172%" y="47.50"></text></g><g><title>IOKit`io_connect_method (4,373 samples, 0.94%)</title><rect x="15.1592%" y="53" width="0.9420%" height="15" fill="rgb(215,43,3)" fg:x="70376" fg:w="4373"/><text x="15.4092%" y="63.50"></text></g><g><title>IOKit`IOConnectCallMethod (4,390 samples, 0.95%)</title><rect x="15.1568%" y="69" width="0.9456%" height="15" fill="rgb(238,154,13)" fg:x="70365" fg:w="4390"/><text x="15.4068%" y="79.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (4,488 samples, 0.97%)</title><rect x="15.1394%" y="85" width="0.9667%" height="15" fill="rgb(219,56,2)" fg:x="70284" fg:w="4488"/><text x="15.3894%" y="95.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (4,621 samples, 1.00%)</title><rect x="15.1353%" y="101" width="0.9954%" height="15" fill="rgb(233,0,4)" fg:x="70265" fg:w="4621"/><text x="15.3853%" y="111.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (4,656 samples, 1.00%)</title><rect x="15.1338%" y="133" width="1.0029%" height="15" fill="rgb(235,30,7)" fg:x="70258" fg:w="4656"/><text x="15.3838%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (4,654 samples, 1.00%)</title><rect x="15.1342%" y="117" width="1.0025%" height="15" fill="rgb(250,79,13)" fg:x="70260" fg:w="4654"/><text x="15.3842%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (4,674 samples, 1.01%)</title><rect x="15.1303%" y="149" width="1.0068%" height="15" fill="rgb(211,146,34)" fg:x="70242" fg:w="4674"/><text x="15.3803%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (4,729 samples, 1.02%)</title><rect x="15.1293%" y="165" width="1.0186%" height="15" fill="rgb(228,22,38)" fg:x="70237" fg:w="4729"/><text x="15.3793%" y="175.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (118 samples, 0.03%)</title><rect x="16.1542%" y="117" width="0.0254%" height="15" fill="rgb(235,168,5)" fg:x="74995" fg:w="118"/><text x="16.4042%" y="127.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (120 samples, 0.03%)</title><rect x="16.1539%" y="133" width="0.0258%" height="15" fill="rgb(221,155,16)" fg:x="74994" fg:w="120"/><text x="16.4039%" y="143.50"></text></g><g><title>gen`metal::nsstring_from_str (139 samples, 0.03%)</title><rect x="16.1520%" y="149" width="0.0299%" height="15" fill="rgb(215,215,53)" fg:x="74985" fg:w="139"/><text x="16.4020%" y="159.50"></text></g><g><title>gen`metal::resource::ResourceRef::set_label (172 samples, 0.04%)</title><rect x="16.1514%" y="165" width="0.0370%" height="15" fill="rgb(223,4,10)" fg:x="74982" fg:w="172"/><text x="16.4014%" y="175.50"></text></g><g><title>gen`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (4,940 samples, 1.06%)</title><rect x="15.1265%" y="181" width="1.0641%" height="15" fill="rgb(234,103,6)" fg:x="70224" fg:w="4940"/><text x="15.3765%" y="191.50"></text></g><g><title>gen`wgpu_core::device::Device&lt;A&gt;::create_buffer (4,997 samples, 1.08%)</title><rect x="15.1166%" y="197" width="1.0764%" height="15" fill="rgb(227,97,0)" fg:x="70178" fg:w="4997"/><text x="15.3666%" y="207.50"></text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (5,075 samples, 1.09%)</title><rect x="15.1071%" y="213" width="1.0932%" height="15" fill="rgb(234,150,53)" fg:x="70134" fg:w="5075"/><text x="15.3571%" y="223.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (5,102 samples, 1.10%)</title><rect x="15.1036%" y="229" width="1.0990%" height="15" fill="rgb(228,201,54)" fg:x="70118" fg:w="5102"/><text x="15.3536%" y="239.50"></text></g><g><title>gen`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (5,466 samples, 1.18%)</title><rect x="15.0319%" y="245" width="1.1774%" height="15" fill="rgb(222,22,37)" fg:x="69785" fg:w="5466"/><text x="15.2819%" y="255.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (173 samples, 0.04%)</title><rect x="16.2416%" y="165" width="0.0373%" height="15" fill="rgb(237,53,32)" fg:x="75401" fg:w="173"/><text x="16.4916%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawIndexedPrimitives (188 samples, 0.04%)</title><rect x="16.2405%" y="181" width="0.0405%" height="15" fill="rgb(233,25,53)" fg:x="75396" fg:w="188"/><text x="16.4905%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (191 samples, 0.04%)</title><rect x="16.2401%" y="197" width="0.0411%" height="15" fill="rgb(210,40,34)" fg:x="75394" fg:w="191"/><text x="16.4901%" y="207.50"></text></g><g><title>gen`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (196 samples, 0.04%)</title><rect x="16.2401%" y="213" width="0.0422%" height="15" fill="rgb(241,220,44)" fg:x="75394" fg:w="196"/><text x="16.4901%" y="223.50"></text></g><g><title>gen`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (81 samples, 0.02%)</title><rect x="16.2832%" y="213" width="0.0174%" height="15" fill="rgb(235,28,35)" fg:x="75594" fg:w="81"/><text x="16.5332%" y="223.50"></text></g><g><title>gen`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (78 samples, 0.02%)</title><rect x="16.2838%" y="197" width="0.0168%" height="15" fill="rgb(210,56,17)" fg:x="75597" fg:w="78"/><text x="16.5338%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (87 samples, 0.02%)</title><rect x="16.3273%" y="165" width="0.0187%" height="15" fill="rgb(224,130,29)" fg:x="75799" fg:w="87"/><text x="16.5773%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (160 samples, 0.03%)</title><rect x="16.3148%" y="181" width="0.0345%" height="15" fill="rgb(235,212,8)" fg:x="75741" fg:w="160"/><text x="16.5648%" y="191.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (171 samples, 0.04%)</title><rect x="16.3146%" y="197" width="0.0368%" height="15" fill="rgb(223,33,50)" fg:x="75740" fg:w="171"/><text x="16.5646%" y="207.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (213 samples, 0.05%)</title><rect x="16.3064%" y="213" width="0.0459%" height="15" fill="rgb(219,149,13)" fg:x="75702" fg:w="213"/><text x="16.5564%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderStateBindingTable::IGRenderStateBindingTable (50 samples, 0.01%)</title><rect x="16.3680%" y="117" width="0.0108%" height="15" fill="rgb(250,156,29)" fg:x="75988" fg:w="50"/><text x="16.6180%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (87 samples, 0.02%)</title><rect x="16.3644%" y="133" width="0.0187%" height="15" fill="rgb(216,193,19)" fg:x="75971" fg:w="87"/><text x="16.6144%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (64 samples, 0.01%)</title><rect x="16.3950%" y="101" width="0.0138%" height="15" fill="rgb(216,135,14)" fg:x="76113" fg:w="64"/><text x="16.6450%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (70 samples, 0.02%)</title><rect x="16.4100%" y="101" width="0.0151%" height="15" fill="rgb(241,47,5)" fg:x="76183" fg:w="70"/><text x="16.6600%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (147 samples, 0.03%)</title><rect x="16.3945%" y="117" width="0.0317%" height="15" fill="rgb(233,42,35)" fg:x="76111" fg:w="147"/><text x="16.6445%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (281 samples, 0.06%)</title><rect x="16.3831%" y="133" width="0.0605%" height="15" fill="rgb(231,13,6)" fg:x="76058" fg:w="281"/><text x="16.6331%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (73 samples, 0.02%)</title><rect x="16.4279%" y="117" width="0.0157%" height="15" fill="rgb(207,181,40)" fg:x="76266" fg:w="73"/><text x="16.6779%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (72 samples, 0.02%)</title><rect x="16.4281%" y="101" width="0.0155%" height="15" fill="rgb(254,173,49)" fg:x="76267" fg:w="72"/><text x="16.6781%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (402 samples, 0.09%)</title><rect x="16.3635%" y="149" width="0.0866%" height="15" fill="rgb(221,1,38)" fg:x="75967" fg:w="402"/><text x="16.6135%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (428 samples, 0.09%)</title><rect x="16.3594%" y="165" width="0.0922%" height="15" fill="rgb(206,124,46)" fg:x="75948" fg:w="428"/><text x="16.6094%" y="175.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (57 samples, 0.01%)</title><rect x="16.4529%" y="165" width="0.0123%" height="15" fill="rgb(249,21,11)" fg:x="76382" fg:w="57"/><text x="16.7029%" y="175.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (568 samples, 0.12%)</title><rect x="16.3592%" y="181" width="0.1223%" height="15" fill="rgb(222,201,40)" fg:x="75947" fg:w="568"/><text x="16.6092%" y="191.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (587 samples, 0.13%)</title><rect x="16.3579%" y="197" width="0.1264%" height="15" fill="rgb(235,61,29)" fg:x="75941" fg:w="587"/><text x="16.6079%" y="207.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (615 samples, 0.13%)</title><rect x="16.3523%" y="213" width="0.1325%" height="15" fill="rgb(219,207,3)" fg:x="75915" fg:w="615"/><text x="16.6023%" y="223.50"></text></g><g><title>gen`wgpu_core::track::StatefulTrackerSubset::merge_extend (52 samples, 0.01%)</title><rect x="16.4988%" y="213" width="0.0112%" height="15" fill="rgb(222,56,46)" fg:x="76595" fg:w="52"/><text x="16.7488%" y="223.50"></text></g><g><title>gen`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (49 samples, 0.01%)</title><rect x="16.4994%" y="197" width="0.0106%" height="15" fill="rgb(239,76,54)" fg:x="76598" fg:w="49"/><text x="16.7494%" y="207.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (49 samples, 0.01%)</title><rect x="16.5122%" y="149" width="0.0106%" height="15" fill="rgb(231,124,27)" fg:x="76657" fg:w="49"/><text x="16.7622%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (68 samples, 0.01%)</title><rect x="16.5117%" y="165" width="0.0146%" height="15" fill="rgb(249,195,6)" fg:x="76655" fg:w="68"/><text x="16.7617%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (70 samples, 0.02%)</title><rect x="16.5117%" y="181" width="0.0151%" height="15" fill="rgb(237,174,47)" fg:x="76655" fg:w="70"/><text x="16.7617%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (87 samples, 0.02%)</title><rect x="16.5111%" y="197" width="0.0187%" height="15" fill="rgb(206,201,31)" fg:x="76652" fg:w="87"/><text x="16.7611%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (121 samples, 0.03%)</title><rect x="16.5106%" y="213" width="0.0261%" height="15" fill="rgb(231,57,52)" fg:x="76650" fg:w="121"/><text x="16.7606%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder endEncoding] (62 samples, 0.01%)</title><rect x="16.5397%" y="197" width="0.0134%" height="15" fill="rgb(248,177,22)" fg:x="76785" fg:w="62"/><text x="16.7897%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (89 samples, 0.02%)</title><rect x="16.5367%" y="213" width="0.0192%" height="15" fill="rgb(215,211,37)" fg:x="76771" fg:w="89"/><text x="16.7867%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::setPipelineState (47 samples, 0.01%)</title><rect x="16.5638%" y="197" width="0.0101%" height="15" fill="rgb(241,128,51)" fg:x="76897" fg:w="47"/><text x="16.8138%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (57 samples, 0.01%)</title><rect x="16.5621%" y="213" width="0.0123%" height="15" fill="rgb(227,165,31)" fg:x="76889" fg:w="57"/><text x="16.8121%" y="223.50"></text></g><g><title>gen`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,693 samples, 0.36%)</title><rect x="16.2145%" y="229" width="0.3647%" height="15" fill="rgb(228,167,24)" fg:x="75275" fg:w="1693"/><text x="16.4645%" y="239.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1,744 samples, 0.38%)</title><rect x="16.2095%" y="245" width="0.3757%" height="15" fill="rgb(228,143,12)" fg:x="75252" fg:w="1744"/><text x="16.4595%" y="255.50"></text></g><g><title>gen`lyon_tessellation::fill::FillTessellator::process_events (92 samples, 0.02%)</title><rect x="16.6485%" y="149" width="0.0198%" height="15" fill="rgb(249,149,8)" fg:x="77290" fg:w="92"/><text x="16.8985%" y="159.50"></text></g><g><title>gen`lyon_tessellation::fill::FillTessellator::tessellate_impl (141 samples, 0.03%)</title><rect x="16.6390%" y="165" width="0.0304%" height="15" fill="rgb(243,35,44)" fg:x="77246" fg:w="141"/><text x="16.8890%" y="175.50"></text></g><g><title>gen`lyon_tessellation::fill::FillTessellator::tessellate_with_ids (218 samples, 0.05%)</title><rect x="16.6227%" y="181" width="0.0470%" height="15" fill="rgb(246,89,9)" fg:x="77170" fg:w="218"/><text x="16.8727%" y="191.50"></text></g><g><title>gen`nannou::draw::primitive::path::render_path_points_textured (263 samples, 0.06%)</title><rect x="16.6140%" y="197" width="0.0567%" height="15" fill="rgb(233,213,13)" fg:x="77130" fg:w="263"/><text x="16.8640%" y="207.50"></text></g><g><title>gen`&lt;nannou::draw::primitive::texture::Texture as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (310 samples, 0.07%)</title><rect x="16.6091%" y="213" width="0.0668%" height="15" fill="rgb(233,141,41)" fg:x="77107" fg:w="310"/><text x="16.8591%" y="223.50"></text></g><g><title>gen`&lt;nannou::draw::primitive::Primitive as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (321 samples, 0.07%)</title><rect x="16.6078%" y="229" width="0.0691%" height="15" fill="rgb(239,167,4)" fg:x="77101" fg:w="321"/><text x="16.8578%" y="239.50"></text></g><g><title>gen`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51 samples, 0.01%)</title><rect x="16.6907%" y="229" width="0.0110%" height="15" fill="rgb(209,217,16)" fg:x="77486" fg:w="51"/><text x="16.9407%" y="239.50"></text></g><g><title>gen`nannou::draw::renderer::Renderer::fill (601 samples, 0.13%)</title><rect x="16.5972%" y="245" width="0.1295%" height="15" fill="rgb(219,88,35)" fg:x="77052" fg:w="601"/><text x="16.8472%" y="255.50"></text></g><g><title>gen`nannou::draw::renderer::Renderer::encode_render_pass (8,021 samples, 1.73%)</title><rect x="15.0231%" y="261" width="1.7277%" height="15" fill="rgb(220,193,23)" fg:x="69744" fg:w="8021"/><text x="15.2731%" y="271.50"></text></g><g><title>gen`nannou::draw::renderer::Renderer::render_to_frame (8,050 samples, 1.73%)</title><rect x="15.0196%" y="277" width="1.7340%" height="15" fill="rgb(230,90,52)" fg:x="69728" fg:w="8050"/><text x="15.2696%" y="287.50"></text></g><g><title>gen`nannou::app::_&lt;impl nannou::draw::Draw&gt;::to_frame (8,078 samples, 1.74%)</title><rect x="15.0142%" y="293" width="1.7400%" height="15" fill="rgb(252,106,19)" fg:x="69703" fg:w="8078"/><text x="15.2642%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelTexture initWithTextureInternal:pixelFormat:textureType:levels:slices:swizzle:compressedView:] (86 samples, 0.02%)</title><rect x="16.7812%" y="117" width="0.0185%" height="15" fill="rgb(206,74,20)" fg:x="77906" fg:w="86"/><text x="17.0312%" y="127.50"></text></g><g><title>Metal`-[MTLIOAccelTexture initWithTexture:pixelFormat:textureType:levels:slices:swizzle:] (113 samples, 0.02%)</title><rect x="16.7801%" y="133" width="0.0243%" height="15" fill="rgb(230,138,44)" fg:x="77901" fg:w="113"/><text x="17.0301%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelTexture initWithTexture:pixelFormat:textureType:levels:slices:swizzle:] (155 samples, 0.03%)</title><rect x="16.7715%" y="149" width="0.0334%" height="15" fill="rgb(235,182,43)" fg:x="77861" fg:w="155"/><text x="17.0215%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelTexture newTextureViewWithPixelFormat:textureType:levels:slices:] (191 samples, 0.04%)</title><rect x="16.7702%" y="165" width="0.0411%" height="15" fill="rgb(242,16,51)" fg:x="77855" fg:w="191"/><text x="17.0202%" y="175.50"></text></g><g><title>gen`metal::texture::TextureRef::new_texture_view_from_slice (201 samples, 0.04%)</title><rect x="16.7687%" y="181" width="0.0433%" height="15" fill="rgb(248,9,4)" fg:x="77848" fg:w="201"/><text x="17.0187%" y="191.50"></text></g><g><title>gen`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_texture_view (239 samples, 0.05%)</title><rect x="16.7612%" y="197" width="0.0515%" height="15" fill="rgb(210,31,22)" fg:x="77813" fg:w="239"/><text x="17.0112%" y="207.50"></text></g><g><title>gen`wgpu_core::device::Device&lt;A&gt;::create_texture_view (257 samples, 0.06%)</title><rect x="16.7586%" y="213" width="0.0554%" height="15" fill="rgb(239,54,39)" fg:x="77801" fg:w="257"/><text x="17.0086%" y="223.50"></text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (298 samples, 0.06%)</title><rect x="16.7573%" y="229" width="0.0642%" height="15" fill="rgb(230,99,41)" fg:x="77795" fg:w="298"/><text x="17.0073%" y="239.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (307 samples, 0.07%)</title><rect x="16.7562%" y="245" width="0.0661%" height="15" fill="rgb(253,106,12)" fg:x="77790" fg:w="307"/><text x="17.0062%" y="255.50"></text></g><g><title>gen`wgpu::Texture::create_view (310 samples, 0.07%)</title><rect x="16.7562%" y="261" width="0.0668%" height="15" fill="rgb(213,46,41)" fg:x="77790" fg:w="310"/><text x="17.0062%" y="271.50"></text></g><g><title>gen`&lt;nannou_wgpu::texture::Texture as nannou_wgpu::texture::ToTextureView&gt;::to_texture_view (313 samples, 0.07%)</title><rect x="16.7560%" y="277" width="0.0674%" height="15" fill="rgb(215,133,35)" fg:x="77789" fg:w="313"/><text x="17.0060%" y="287.50"></text></g><g><title>gen`nannou::draw::Draw::texture (331 samples, 0.07%)</title><rect x="16.7545%" y="293" width="0.0713%" height="15" fill="rgb(213,28,5)" fg:x="77782" fg:w="331"/><text x="17.0045%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (114 samples, 0.02%)</title><rect x="16.8908%" y="181" width="0.0246%" height="15" fill="rgb(215,77,49)" fg:x="78415" fg:w="114"/><text x="17.1408%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (182 samples, 0.04%)</title><rect x="16.8773%" y="197" width="0.0392%" height="15" fill="rgb(248,100,22)" fg:x="78352" fg:w="182"/><text x="17.1273%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (191 samples, 0.04%)</title><rect x="16.8770%" y="213" width="0.0411%" height="15" fill="rgb(208,67,9)" fg:x="78351" fg:w="191"/><text x="17.1270%" y="223.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (254 samples, 0.05%)</title><rect x="16.8639%" y="229" width="0.0547%" height="15" fill="rgb(219,133,21)" fg:x="78290" fg:w="254"/><text x="17.1139%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initContextStateDescriptorForEngine:] (48 samples, 0.01%)</title><rect x="16.9305%" y="165" width="0.0103%" height="15" fill="rgb(246,46,29)" fg:x="78599" fg:w="48"/><text x="17.1805%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (101 samples, 0.02%)</title><rect x="16.9445%" y="149" width="0.0218%" height="15" fill="rgb(246,185,52)" fg:x="78664" fg:w="101"/><text x="17.1945%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeHWState (103 samples, 0.02%)</title><rect x="16.9759%" y="133" width="0.0222%" height="15" fill="rgb(252,136,11)" fg:x="78810" fg:w="103"/><text x="17.2259%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (52 samples, 0.01%)</title><rect x="16.9994%" y="101" width="0.0112%" height="15" fill="rgb(219,138,53)" fg:x="78919" fg:w="52"/><text x="17.2494%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (100 samples, 0.02%)</title><rect x="16.9985%" y="117" width="0.0215%" height="15" fill="rgb(211,51,23)" fg:x="78915" fg:w="100"/><text x="17.2485%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (73 samples, 0.02%)</title><rect x="17.0214%" y="117" width="0.0157%" height="15" fill="rgb(247,221,28)" fg:x="79021" fg:w="73"/><text x="17.2714%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (188 samples, 0.04%)</title><rect x="16.9981%" y="133" width="0.0405%" height="15" fill="rgb(251,222,45)" fg:x="78913" fg:w="188"/><text x="17.2481%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (78 samples, 0.02%)</title><rect x="17.0429%" y="117" width="0.0168%" height="15" fill="rgb(217,162,53)" fg:x="79121" fg:w="78"/><text x="17.2929%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (95 samples, 0.02%)</title><rect x="17.0412%" y="133" width="0.0205%" height="15" fill="rgb(229,93,14)" fg:x="79113" fg:w="95"/><text x="17.2912%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (450 samples, 0.10%)</title><rect x="16.9662%" y="149" width="0.0969%" height="15" fill="rgb(209,67,49)" fg:x="78765" fg:w="450"/><text x="17.2162%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (611 samples, 0.13%)</title><rect x="16.9421%" y="165" width="0.1316%" height="15" fill="rgb(213,87,29)" fg:x="78653" fg:w="611"/><text x="17.1921%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (693 samples, 0.15%)</title><rect x="16.9290%" y="181" width="0.1493%" height="15" fill="rgb(205,151,52)" fg:x="78592" fg:w="693"/><text x="17.1790%" y="191.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (72 samples, 0.02%)</title><rect x="17.0802%" y="181" width="0.0155%" height="15" fill="rgb(253,215,39)" fg:x="79294" fg:w="72"/><text x="17.3302%" y="191.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (877 samples, 0.19%)</title><rect x="16.9283%" y="197" width="0.1889%" height="15" fill="rgb(221,220,41)" fg:x="78589" fg:w="877"/><text x="17.1783%" y="207.50"></text></g><g><title>gen`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (947 samples, 0.20%)</title><rect x="16.9186%" y="229" width="0.2040%" height="15" fill="rgb(218,133,21)" fg:x="78544" fg:w="947"/><text x="17.1686%" y="239.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (917 samples, 0.20%)</title><rect x="16.9251%" y="213" width="0.1975%" height="15" fill="rgb(221,193,43)" fg:x="78574" fg:w="917"/><text x="17.1751%" y="223.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (78 samples, 0.02%)</title><rect x="17.1357%" y="149" width="0.0168%" height="15" fill="rgb(240,128,52)" fg:x="79552" fg:w="78"/><text x="17.3857%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (148 samples, 0.03%)</title><rect x="17.1336%" y="165" width="0.0319%" height="15" fill="rgb(253,114,12)" fg:x="79542" fg:w="148"/><text x="17.3836%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (209 samples, 0.05%)</title><rect x="17.1291%" y="181" width="0.0450%" height="15" fill="rgb(215,223,47)" fg:x="79521" fg:w="209"/><text x="17.3791%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (227 samples, 0.05%)</title><rect x="17.1280%" y="197" width="0.0489%" height="15" fill="rgb(248,225,23)" fg:x="79516" fg:w="227"/><text x="17.3780%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (264 samples, 0.06%)</title><rect x="17.1271%" y="213" width="0.0569%" height="15" fill="rgb(250,108,0)" fg:x="79512" fg:w="264"/><text x="17.3771%" y="223.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (71 samples, 0.02%)</title><rect x="17.1892%" y="181" width="0.0153%" height="15" fill="rgb(228,208,7)" fg:x="79800" fg:w="71"/><text x="17.4392%" y="191.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (70 samples, 0.02%)</title><rect x="17.1894%" y="165" width="0.0151%" height="15" fill="rgb(244,45,10)" fg:x="79801" fg:w="70"/><text x="17.4394%" y="175.50"></text></g><g><title>gen`metal::nsstring_from_str (86 samples, 0.02%)</title><rect x="17.1885%" y="197" width="0.0185%" height="15" fill="rgb(207,125,25)" fg:x="79797" fg:w="86"/><text x="17.4385%" y="207.50"></text></g><g><title>gen`metal::commandbuffer::CommandBufferRef::set_label (131 samples, 0.03%)</title><rect x="17.1870%" y="213" width="0.0282%" height="15" fill="rgb(210,195,18)" fg:x="79790" fg:w="131"/><text x="17.4370%" y="223.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (438 samples, 0.09%)</title><rect x="17.1260%" y="229" width="0.0943%" height="15" fill="rgb(249,80,12)" fg:x="79507" fg:w="438"/><text x="17.3760%" y="239.50"></text></g><g><title>gen`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,793 samples, 0.39%)</title><rect x="16.8387%" y="245" width="0.3862%" height="15" fill="rgb(221,65,9)" fg:x="78173" fg:w="1793"/><text x="17.0887%" y="255.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1,830 samples, 0.39%)</title><rect x="16.8318%" y="261" width="0.3942%" height="15" fill="rgb(235,49,36)" fg:x="78141" fg:w="1830"/><text x="17.0818%" y="271.50"></text></g><g><title>gen`nannou_wgpu::clear_texture (1,891 samples, 0.41%)</title><rect x="16.8299%" y="277" width="0.4073%" height="15" fill="rgb(225,32,20)" fg:x="78132" fg:w="1891"/><text x="17.0799%" y="287.50"></text></g><g><title>gen`nannou::frame::raw::RawFrame::clear (1,898 samples, 0.41%)</title><rect x="16.8286%" y="293" width="0.4088%" height="15" fill="rgb(215,141,46)" fg:x="78126" fg:w="1898"/><text x="17.0786%" y="303.50"></text></g><g><title>gen`nannou_wgpu::texture::row_padded_buffer::RowPaddedBuffer::write (2,764 samples, 0.60%)</title><rect x="17.2475%" y="277" width="0.5954%" height="15" fill="rgb(250,160,47)" fg:x="80071" fg:w="2764"/><text x="17.4975%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2,715 samples, 0.58%)</title><rect x="17.2581%" y="261" width="0.5848%" height="15" fill="rgb(216,222,40)" fg:x="80120" fg:w="2715"/><text x="17.5081%" y="271.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (60 samples, 0.01%)</title><rect x="17.8744%" y="149" width="0.0129%" height="15" fill="rgb(234,217,39)" fg:x="82981" fg:w="60"/><text x="18.1244%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (87 samples, 0.02%)</title><rect x="17.8733%" y="165" width="0.0187%" height="15" fill="rgb(207,178,40)" fg:x="82976" fg:w="87"/><text x="18.1233%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (118 samples, 0.03%)</title><rect x="17.8707%" y="181" width="0.0254%" height="15" fill="rgb(221,136,13)" fg:x="82964" fg:w="118"/><text x="18.1207%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (124 samples, 0.03%)</title><rect x="17.8707%" y="197" width="0.0267%" height="15" fill="rgb(249,199,10)" fg:x="82964" fg:w="124"/><text x="18.1207%" y="207.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (137 samples, 0.03%)</title><rect x="17.8703%" y="213" width="0.0295%" height="15" fill="rgb(249,222,13)" fg:x="82962" fg:w="137"/><text x="18.1203%" y="223.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (198 samples, 0.04%)</title><rect x="17.8688%" y="229" width="0.0426%" height="15" fill="rgb(244,185,38)" fg:x="82955" fg:w="198"/><text x="18.1188%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::updateBlitKernels (54 samples, 0.01%)</title><rect x="17.9217%" y="133" width="0.0116%" height="15" fill="rgb(236,202,9)" fg:x="83201" fg:w="54"/><text x="18.1717%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.01%)</title><rect x="17.9222%" y="117" width="0.0112%" height="15" fill="rgb(250,229,37)" fg:x="83203" fg:w="52"/><text x="18.1722%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (64 samples, 0.01%)</title><rect x="17.9351%" y="101" width="0.0138%" height="15" fill="rgb(206,174,23)" fg:x="83263" fg:w="64"/><text x="18.1851%" y="111.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelEncoderBase::getStateHeaps (72 samples, 0.02%)</title><rect x="17.9338%" y="133" width="0.0155%" height="15" fill="rgb(211,33,43)" fg:x="83257" fg:w="72"/><text x="18.1838%" y="143.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IntelStateHeaps::initialize (70 samples, 0.02%)</title><rect x="17.9342%" y="117" width="0.0151%" height="15" fill="rgb(245,58,50)" fg:x="83259" fg:w="70"/><text x="18.1842%" y="127.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::preparePipeline (163 samples, 0.04%)</title><rect x="17.9177%" y="149" width="0.0351%" height="15" fill="rgb(244,68,36)" fg:x="83182" fg:w="163"/><text x="18.1677%" y="159.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (233 samples, 0.05%)</title><rect x="17.9159%" y="165" width="0.0502%" height="15" fill="rgb(232,229,15)" fg:x="83174" fg:w="233"/><text x="18.1659%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToTexture (261 samples, 0.06%)</title><rect x="17.9136%" y="181" width="0.0562%" height="15" fill="rgb(254,30,23)" fg:x="83163" fg:w="261"/><text x="18.1636%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:] (297 samples, 0.06%)</title><rect x="17.9121%" y="197" width="0.0640%" height="15" fill="rgb(235,160,14)" fg:x="83156" fg:w="297"/><text x="18.1621%" y="207.50"></text></g><g><title>gen`metal::encoder::BlitCommandEncoderRef::copy_from_buffer_to_texture (302 samples, 0.07%)</title><rect x="17.9118%" y="213" width="0.0651%" height="15" fill="rgb(212,155,44)" fg:x="83155" fg:w="302"/><text x="18.1618%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (82 samples, 0.02%)</title><rect x="17.9803%" y="165" width="0.0177%" height="15" fill="rgb(226,2,50)" fg:x="83473" fg:w="82"/><text x="18.2303%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (129 samples, 0.03%)</title><rect x="17.9797%" y="181" width="0.0278%" height="15" fill="rgb(234,177,6)" fg:x="83470" fg:w="129"/><text x="18.2297%" y="191.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (144 samples, 0.03%)</title><rect x="17.9790%" y="197" width="0.0310%" height="15" fill="rgb(217,24,9)" fg:x="83467" fg:w="144"/><text x="18.2290%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (151 samples, 0.03%)</title><rect x="17.9780%" y="213" width="0.0325%" height="15" fill="rgb(220,13,46)" fg:x="83462" fg:w="151"/><text x="18.2280%" y="223.50"></text></g><g><title>gen`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_texture (463 samples, 0.10%)</title><rect x="17.9114%" y="229" width="0.0997%" height="15" fill="rgb(239,221,27)" fg:x="83153" fg:w="463"/><text x="18.1614%" y="239.50"></text></g><g><title>gen`wgpu_core::command::transfer::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_texture (784 samples, 0.17%)</title><rect x="17.8448%" y="245" width="0.1689%" height="15" fill="rgb(222,198,25)" fg:x="82844" fg:w="784"/><text x="18.0948%" y="255.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_texture (805 samples, 0.17%)</title><rect x="17.8438%" y="261" width="0.1734%" height="15" fill="rgb(211,99,13)" fg:x="82839" fg:w="805"/><text x="18.0938%" y="271.50"></text></g><g><title>gen`wgpu::CommandEncoder::copy_buffer_to_texture (808 samples, 0.17%)</title><rect x="17.8433%" y="277" width="0.1740%" height="15" fill="rgb(232,111,31)" fg:x="82837" fg:w="808"/><text x="18.0933%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (694 samples, 0.15%)</title><rect x="18.0639%" y="69" width="0.1495%" height="15" fill="rgb(245,82,37)" fg:x="83861" fg:w="694"/><text x="18.3139%" y="79.50"></text></g><g><title>IOKit`io_connect_method (707 samples, 0.15%)</title><rect x="18.0622%" y="85" width="0.1523%" height="15" fill="rgb(227,149,46)" fg:x="83853" fg:w="707"/><text x="18.3122%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (718 samples, 0.15%)</title><rect x="18.0607%" y="101" width="0.1547%" height="15" fill="rgb(218,36,50)" fg:x="83846" fg:w="718"/><text x="18.3107%" y="111.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (2,018 samples, 0.43%)</title><rect x="18.0525%" y="117" width="0.4347%" height="15" fill="rgb(226,80,48)" fg:x="83808" fg:w="2018"/><text x="18.3025%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1,262 samples, 0.27%)</title><rect x="18.2153%" y="101" width="0.2718%" height="15" fill="rgb(238,224,15)" fg:x="84564" fg:w="1262"/><text x="18.4653%" y="111.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (2,097 samples, 0.45%)</title><rect x="18.0491%" y="133" width="0.4517%" height="15" fill="rgb(241,136,10)" fg:x="83792" fg:w="2097"/><text x="18.2991%" y="143.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (2,127 samples, 0.46%)</title><rect x="18.0471%" y="149" width="0.4582%" height="15" fill="rgb(208,32,45)" fg:x="83783" fg:w="2127"/><text x="18.2971%" y="159.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (2,133 samples, 0.46%)</title><rect x="18.0460%" y="165" width="0.4595%" height="15" fill="rgb(207,135,9)" fg:x="83778" fg:w="2133"/><text x="18.2960%" y="175.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (2,146 samples, 0.46%)</title><rect x="18.0437%" y="181" width="0.4623%" height="15" fill="rgb(206,86,44)" fg:x="83767" fg:w="2146"/><text x="18.2937%" y="191.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (2,206 samples, 0.48%)</title><rect x="18.0407%" y="197" width="0.4752%" height="15" fill="rgb(245,177,15)" fg:x="83753" fg:w="2206"/><text x="18.2907%" y="207.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (65 samples, 0.01%)</title><rect x="18.5208%" y="165" width="0.0140%" height="15" fill="rgb(206,64,50)" fg:x="85982" fg:w="65"/><text x="18.7708%" y="175.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (65 samples, 0.01%)</title><rect x="18.5208%" y="149" width="0.0140%" height="15" fill="rgb(234,36,40)" fg:x="85982" fg:w="65"/><text x="18.7708%" y="159.50"></text></g><g><title>gen`metal::nsstring_from_str (86 samples, 0.02%)</title><rect x="18.5188%" y="181" width="0.0185%" height="15" fill="rgb(213,64,8)" fg:x="85973" fg:w="86"/><text x="18.7688%" y="191.50"></text></g><g><title>gen`metal::resource::ResourceRef::set_label (118 samples, 0.03%)</title><rect x="18.5173%" y="197" width="0.0254%" height="15" fill="rgb(210,75,36)" fg:x="85966" fg:w="118"/><text x="18.7673%" y="207.50"></text></g><g><title>gen`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (2,355 samples, 0.51%)</title><rect x="18.0391%" y="213" width="0.5073%" height="15" fill="rgb(229,88,21)" fg:x="83746" fg:w="2355"/><text x="18.2891%" y="223.50"></text></g><g><title>gen`wgpu_core::device::Device&lt;A&gt;::create_buffer (2,405 samples, 0.52%)</title><rect x="18.0327%" y="229" width="0.5180%" height="15" fill="rgb(252,204,47)" fg:x="83716" fg:w="2405"/><text x="18.2827%" y="239.50"></text></g><g><title>gen`wgpu_core::device::map_buffer (1,332 samples, 0.29%)</title><rect x="18.5507%" y="229" width="0.2869%" height="15" fill="rgb(208,77,27)" fg:x="86121" fg:w="1332"/><text x="18.8007%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1,302 samples, 0.28%)</title><rect x="18.5572%" y="213" width="0.2805%" height="15" fill="rgb(221,76,26)" fg:x="86151" fg:w="1302"/><text x="18.8072%" y="223.50"></text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (3,825 samples, 0.82%)</title><rect x="18.0213%" y="245" width="0.8239%" height="15" fill="rgb(225,139,18)" fg:x="83663" fg:w="3825"/><text x="18.2713%" y="255.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (3,852 samples, 0.83%)</title><rect x="18.0195%" y="261" width="0.8297%" height="15" fill="rgb(230,137,11)" fg:x="83655" fg:w="3852"/><text x="18.2695%" y="271.50"></text></g><g><title>gen`wgpu::Device::create_buffer (3,865 samples, 0.83%)</title><rect x="18.0174%" y="277" width="0.8325%" height="15" fill="rgb(212,28,1)" fg:x="83645" fg:w="3865"/><text x="18.2674%" y="287.50"></text></g><g><title>gen`nannou_wgpu::texture::Texture::upload_data (7,501 samples, 1.62%)</title><rect x="17.2389%" y="293" width="1.6157%" height="15" fill="rgb(248,164,17)" fg:x="80031" fg:w="7501"/><text x="17.4889%" y="303.50"></text></g><g><title>gen`gen::view (84,381 samples, 18.18%)</title><rect x="0.6927%" y="309" width="18.1759%" height="15" fill="rgb(222,171,42)" fg:x="3216" fg:w="84381"/><text x="0.9427%" y="319.50">gen`gen::view</text></g><g><title>gen`DYLD-STUB$$logf (1,596 samples, 0.34%)</title><rect x="18.8896%" y="293" width="0.3438%" height="15" fill="rgb(243,84,45)" fg:x="87694" fg:w="1596"/><text x="19.1396%" y="303.50"></text></g><g><title>gen`gen::compute_energy (4,221 samples, 0.91%)</title><rect x="19.2342%" y="293" width="0.9092%" height="15" fill="rgb(252,49,23)" fg:x="89294" fg:w="4221"/><text x="19.4842%" y="303.50"></text></g><g><title>gen`gen::update (289,153 samples, 62.28%)</title><rect x="20.1434%" y="293" width="62.2844%" height="15" fill="rgb(215,19,7)" fg:x="93515" fg:w="289153"/><text x="20.3934%" y="303.50">gen`gen::update</text></g><g><title>gen`gen::compute_energy (142,811 samples, 30.76%)</title><rect x="51.6659%" y="277" width="30.7619%" height="15" fill="rgb(238,81,41)" fg:x="239857" fg:w="142811"/><text x="51.9159%" y="287.50">gen`gen::compute_energy</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (171 samples, 0.04%)</title><rect x="82.4345%" y="261" width="0.0368%" height="15" fill="rgb(210,199,37)" fg:x="382699" fg:w="171"/><text x="82.6845%" y="271.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (195 samples, 0.04%)</title><rect x="82.4296%" y="277" width="0.0420%" height="15" fill="rgb(244,192,49)" fg:x="382676" fg:w="195"/><text x="82.6796%" y="287.50"></text></g><g><title>gen`winit::platform_impl::platform::app_state::AppState::queue_redraw (248 samples, 0.05%)</title><rect x="82.4279%" y="293" width="0.0534%" height="15" fill="rgb(226,211,11)" fg:x="382668" fg:w="248"/><text x="82.6779%" y="303.50"></text></g><g><title>libsystem_m.dylib`logf (45,148 samples, 9.73%)</title><rect x="82.4823%" y="293" width="9.7250%" height="15" fill="rgb(236,162,54)" fg:x="382921" fg:w="45148"/><text x="82.7323%" y="303.50">libsystem_m.dy..</text></g><g><title>gen`nannou::app::apply_update (340,431 samples, 73.33%)</title><rect x="18.8779%" y="309" width="73.3299%" height="15" fill="rgb(220,229,9)" fg:x="87640" fg:w="340431"/><text x="19.1279%" y="319.50">gen`nannou::app::apply_update</text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (67 samples, 0.01%)</title><rect x="92.2216%" y="261" width="0.0144%" height="15" fill="rgb(250,87,22)" fg:x="428135" fg:w="67"/><text x="92.4716%" y="271.50"></text></g><g><title>gen`nannou::frame::raw::RawFrame::new_empty (84 samples, 0.02%)</title><rect x="92.2183%" y="309" width="0.0181%" height="15" fill="rgb(239,43,17)" fg:x="428120" fg:w="84"/><text x="92.4683%" y="319.50"></text></g><g><title>gen`wgpu::Device::create_command_encoder (79 samples, 0.02%)</title><rect x="92.2194%" y="293" width="0.0170%" height="15" fill="rgb(231,177,25)" fg:x="428125" fg:w="79"/><text x="92.4694%" y="303.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (79 samples, 0.02%)</title><rect x="92.2194%" y="277" width="0.0170%" height="15" fill="rgb(219,179,1)" fg:x="428125" fg:w="79"/><text x="92.4694%" y="287.50"></text></g><g><title>IOKit`io_connect_method (452 samples, 0.10%)</title><rect x="92.2978%" y="165" width="0.0974%" height="15" fill="rgb(238,219,53)" fg:x="428489" fg:w="452"/><text x="92.5478%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (437 samples, 0.09%)</title><rect x="92.3011%" y="149" width="0.0941%" height="15" fill="rgb(232,167,36)" fg:x="428504" fg:w="437"/><text x="92.5511%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (477 samples, 0.10%)</title><rect x="92.2963%" y="181" width="0.1027%" height="15" fill="rgb(244,19,51)" fg:x="428482" fg:w="477"/><text x="92.5463%" y="191.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (493 samples, 0.11%)</title><rect x="92.2944%" y="197" width="0.1062%" height="15" fill="rgb(224,6,22)" fg:x="428473" fg:w="493"/><text x="92.5444%" y="207.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (563 samples, 0.12%)</title><rect x="92.2884%" y="213" width="0.1213%" height="15" fill="rgb(224,145,5)" fg:x="428445" fg:w="563"/><text x="92.5384%" y="223.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (53 samples, 0.01%)</title><rect x="92.4249%" y="165" width="0.0114%" height="15" fill="rgb(234,130,49)" fg:x="429079" fg:w="53"/><text x="92.6749%" y="175.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (90 samples, 0.02%)</title><rect x="92.4221%" y="181" width="0.0194%" height="15" fill="rgb(254,6,2)" fg:x="429066" fg:w="90"/><text x="92.6721%" y="191.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (116 samples, 0.02%)</title><rect x="92.4213%" y="197" width="0.0250%" height="15" fill="rgb(208,96,46)" fg:x="429062" fg:w="116"/><text x="92.6713%" y="207.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (173 samples, 0.04%)</title><rect x="92.4096%" y="213" width="0.0373%" height="15" fill="rgb(239,3,39)" fg:x="429008" fg:w="173"/><text x="92.6596%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (69 samples, 0.01%)</title><rect x="92.4534%" y="213" width="0.0149%" height="15" fill="rgb(233,210,1)" fg:x="429211" fg:w="69"/><text x="92.7034%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (61 samples, 0.01%)</title><rect x="92.4551%" y="197" width="0.0131%" height="15" fill="rgb(244,137,37)" fg:x="429219" fg:w="61"/><text x="92.7051%" y="207.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (911 samples, 0.20%)</title><rect x="92.2761%" y="229" width="0.1962%" height="15" fill="rgb(240,136,2)" fg:x="428388" fg:w="911"/><text x="92.5261%" y="239.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (957 samples, 0.21%)</title><rect x="92.2750%" y="245" width="0.2061%" height="15" fill="rgb(239,18,37)" fg:x="428383" fg:w="957"/><text x="92.5250%" y="255.50"></text></g><g><title>gen`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (1,111 samples, 0.24%)</title><rect x="92.2489%" y="277" width="0.2393%" height="15" fill="rgb(218,185,22)" fg:x="428262" fg:w="1111"/><text x="92.4989%" y="287.50"></text></g><g><title>gen`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (1,006 samples, 0.22%)</title><rect x="92.2716%" y="261" width="0.2167%" height="15" fill="rgb(225,218,4)" fg:x="428367" fg:w="1006"/><text x="92.5216%" y="271.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (1,143 samples, 0.25%)</title><rect x="92.2442%" y="293" width="0.2462%" height="15" fill="rgb(230,182,32)" fg:x="428240" fg:w="1143"/><text x="92.4942%" y="303.50"></text></g><g><title>gen`wgpu::Surface::get_current_texture (1,152 samples, 0.25%)</title><rect x="92.2436%" y="309" width="0.2481%" height="15" fill="rgb(242,56,43)" fg:x="428237" fg:w="1152"/><text x="92.4936%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (121 samples, 0.03%)</title><rect x="92.5195%" y="197" width="0.0261%" height="15" fill="rgb(233,99,24)" fg:x="429518" fg:w="121"/><text x="92.7695%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (120 samples, 0.03%)</title><rect x="92.5197%" y="181" width="0.0258%" height="15" fill="rgb(234,209,42)" fg:x="429519" fg:w="120"/><text x="92.7697%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (116 samples, 0.02%)</title><rect x="92.5206%" y="165" width="0.0250%" height="15" fill="rgb(227,7,12)" fg:x="429523" fg:w="116"/><text x="92.7706%" y="175.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable addPresentScheduledHandler:] (224 samples, 0.05%)</title><rect x="92.5113%" y="213" width="0.0483%" height="15" fill="rgb(245,203,43)" fg:x="429480" fg:w="224"/><text x="92.7613%" y="223.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (287 samples, 0.06%)</title><rect x="92.5074%" y="229" width="0.0618%" height="15" fill="rgb(238,205,33)" fg:x="429462" fg:w="287"/><text x="92.7574%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer presentDrawable:] (302 samples, 0.07%)</title><rect x="92.5070%" y="245" width="0.0651%" height="15" fill="rgb(231,56,7)" fg:x="429460" fg:w="302"/><text x="92.7570%" y="255.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (53 samples, 0.01%)</title><rect x="92.5720%" y="213" width="0.0114%" height="15" fill="rgb(244,186,29)" fg:x="429762" fg:w="53"/><text x="92.8220%" y="223.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:] (55 samples, 0.01%)</title><rect x="92.5720%" y="229" width="0.0118%" height="15" fill="rgb(234,111,31)" fg:x="429762" fg:w="55"/><text x="92.8220%" y="239.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBuffer] (64 samples, 0.01%)</title><rect x="92.5720%" y="245" width="0.0138%" height="15" fill="rgb(241,149,10)" fg:x="429762" fg:w="64"/><text x="92.8220%" y="255.50"></text></g><g><title>gen`objc::rc::autorelease::autoreleasepool (440 samples, 0.09%)</title><rect x="92.4973%" y="261" width="0.0948%" height="15" fill="rgb(249,206,44)" fg:x="429415" fg:w="440"/><text x="92.7473%" y="271.50"></text></g><g><title>gen`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (451 samples, 0.10%)</title><rect x="92.4960%" y="277" width="0.0971%" height="15" fill="rgb(251,153,30)" fg:x="429409" fg:w="451"/><text x="92.7460%" y="287.50"></text></g><g><title>gen`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (498 samples, 0.11%)</title><rect x="92.4934%" y="293" width="0.1073%" height="15" fill="rgb(239,152,38)" fg:x="429397" fg:w="498"/><text x="92.7434%" y="303.50"></text></g><g><title>gen`wgpu::SurfaceTexture::present (508 samples, 0.11%)</title><rect x="92.4917%" y="309" width="0.1094%" height="15" fill="rgb(249,139,47)" fg:x="429389" fg:w="508"/><text x="92.7417%" y="319.50"></text></g><g><title>gen`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (71 samples, 0.02%)</title><rect x="92.6022%" y="277" width="0.0153%" height="15" fill="rgb(244,64,35)" fg:x="429902" fg:w="71"/><text x="92.8522%" y="287.50"></text></g><g><title>gen`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (91 samples, 0.02%)</title><rect x="92.6016%" y="293" width="0.0196%" height="15" fill="rgb(216,46,15)" fg:x="429899" fg:w="91"/><text x="92.8516%" y="303.50"></text></g><g><title>gen`wgpu::Texture::create_view (96 samples, 0.02%)</title><rect x="92.6011%" y="309" width="0.0207%" height="15" fill="rgb(250,74,19)" fg:x="429897" fg:w="96"/><text x="92.8511%" y="319.50"></text></g><g><title>gen`nannou::app::run_loop::_{{closure}} (426,900 samples, 91.96%)</title><rect x="0.6708%" y="325" width="91.9556%" height="15" fill="rgb(249,42,33)" fg:x="3114" fg:w="426900"/><text x="0.9208%" y="335.50">gen`nannou::app::run_loop::_{{closure}}</text></g><g><title>gen`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (426,981 samples, 91.97%)</title><rect x="0.6570%" y="341" width="91.9730%" height="15" fill="rgb(242,149,17)" fg:x="3050" fg:w="426981"/><text x="0.9070%" y="351.50">gen`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event</text></g><g><title>gen`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (427,021 samples, 91.98%)</title><rect x="0.6535%" y="357" width="91.9816%" height="15" fill="rgb(244,29,21)" fg:x="3034" fg:w="427021"/><text x="0.9035%" y="367.50">gen`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>gen`winit::platform_impl::platform::app_state::AppState::cleared (427,143 samples, 92.01%)</title><rect x="0.6354%" y="373" width="92.0079%" height="15" fill="rgb(220,130,37)" fg:x="2950" fg:w="427143"/><text x="0.8854%" y="383.50">gen`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>gen`winit::platform_impl::platform::observer::control_flow_end_handler (427,166 samples, 92.01%)</title><rect x="0.6318%" y="389" width="92.0129%" height="15" fill="rgb(211,67,2)" fg:x="2933" fg:w="427166"/><text x="0.8818%" y="399.50">gen`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (427,486 samples, 92.08%)</title><rect x="0.5633%" y="405" width="92.0818%" height="15" fill="rgb(235,68,52)" fg:x="2615" fg:w="427486"/><text x="0.8133%" y="415.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (427,557 samples, 92.10%)</title><rect x="0.5514%" y="421" width="92.0971%" height="15" fill="rgb(246,142,3)" fg:x="2560" fg:w="427557"/><text x="0.8014%" y="431.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (70 samples, 0.02%)</title><rect x="92.9654%" y="389" width="0.0151%" height="15" fill="rgb(241,25,7)" fg:x="431588" fg:w="70"/><text x="93.2154%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (1,535 samples, 0.33%)</title><rect x="92.6644%" y="405" width="0.3306%" height="15" fill="rgb(242,119,39)" fg:x="430191" fg:w="1535"/><text x="92.9144%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (1,570 samples, 0.34%)</title><rect x="92.6591%" y="421" width="0.3382%" height="15" fill="rgb(241,98,45)" fg:x="430166" fg:w="1570"/><text x="92.9091%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (102 samples, 0.02%)</title><rect x="92.9988%" y="421" width="0.0220%" height="15" fill="rgb(254,28,30)" fg:x="431743" fg:w="102"/><text x="93.2488%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (97 samples, 0.02%)</title><rect x="92.9998%" y="405" width="0.0209%" height="15" fill="rgb(241,142,54)" fg:x="431748" fg:w="97"/><text x="93.2498%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (141 samples, 0.03%)</title><rect x="93.0289%" y="421" width="0.0304%" height="15" fill="rgb(222,85,15)" fg:x="431883" fg:w="141"/><text x="93.2789%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (429,625 samples, 92.54%)</title><rect x="0.5211%" y="437" width="92.5425%" height="15" fill="rgb(210,85,47)" fg:x="2419" fg:w="429625"/><text x="0.7711%" y="447.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (430,242 samples, 92.68%)</title><rect x="0.3970%" y="453" width="92.6754%" height="15" fill="rgb(224,206,25)" fg:x="1843" fg:w="430242"/><text x="0.6470%" y="463.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (70 samples, 0.02%)</title><rect x="93.0931%" y="405" width="0.0151%" height="15" fill="rgb(243,201,19)" fg:x="432181" fg:w="70"/><text x="93.3431%" y="415.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (140 samples, 0.03%)</title><rect x="93.1099%" y="405" width="0.0302%" height="15" fill="rgb(236,59,4)" fg:x="432259" fg:w="140"/><text x="93.3599%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (136 samples, 0.03%)</title><rect x="93.1108%" y="389" width="0.0293%" height="15" fill="rgb(254,179,45)" fg:x="432263" fg:w="136"/><text x="93.3608%" y="399.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (315 samples, 0.07%)</title><rect x="93.0813%" y="421" width="0.0679%" height="15" fill="rgb(226,14,10)" fg:x="432126" fg:w="315"/><text x="93.3313%" y="431.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (326 samples, 0.07%)</title><rect x="93.0797%" y="437" width="0.0702%" height="15" fill="rgb(244,27,41)" fg:x="432119" fg:w="326"/><text x="93.3297%" y="447.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (341 samples, 0.07%)</title><rect x="93.0778%" y="453" width="0.0735%" height="15" fill="rgb(235,35,32)" fg:x="432110" fg:w="341"/><text x="93.3278%" y="463.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (430,630 samples, 92.76%)</title><rect x="0.3948%" y="469" width="92.7590%" height="15" fill="rgb(218,68,31)" fg:x="1833" fg:w="430630"/><text x="0.6448%" y="479.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>CoreFoundation`_CFRelease (100 samples, 0.02%)</title><rect x="93.1545%" y="453" width="0.0215%" height="15" fill="rgb(207,120,37)" fg:x="432466" fg:w="100"/><text x="93.4045%" y="463.50"></text></g><g><title>HIToolbox`_DropPendingBoost (108 samples, 0.02%)</title><rect x="93.1538%" y="469" width="0.0233%" height="15" fill="rgb(227,98,0)" fg:x="432463" fg:w="108"/><text x="93.4038%" y="479.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (430,834 samples, 92.80%)</title><rect x="0.3778%" y="485" width="92.8030%" height="15" fill="rgb(207,7,3)" fg:x="1754" fg:w="430834"/><text x="0.6278%" y="495.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (430,847 samples, 92.81%)</title><rect x="0.3754%" y="501" width="92.8058%" height="15" fill="rgb(206,98,19)" fg:x="1743" fg:w="430847"/><text x="0.6254%" y="511.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>AppKit`_DPSNextEvent (430,882 samples, 92.81%)</title><rect x="0.3688%" y="517" width="92.8133%" height="15" fill="rgb(217,5,26)" fg:x="1712" fg:w="430882"/><text x="0.6188%" y="527.50">AppKit`_DPSNextEvent</text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (86 samples, 0.02%)</title><rect x="93.1913%" y="517" width="0.0185%" height="15" fill="rgb(235,190,38)" fg:x="432637" fg:w="86"/><text x="93.4413%" y="527.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (432,112 samples, 93.08%)</title><rect x="0.1404%" y="533" width="93.0782%" height="15" fill="rgb(247,86,24)" fg:x="652" fg:w="432112"/><text x="0.3904%" y="543.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`-[NSApplication run] (432,848 samples, 93.24%)</title><rect x="0.0004%" y="549" width="93.2368%" height="15" fill="rgb(205,101,16)" fg:x="2" fg:w="432848"/><text x="0.2504%" y="559.50">AppKit`-[NSApplication run]</text></g><g><title>gen`0x1080c9f83 (432,877 samples, 93.24%)</title><rect x="0.0000%" y="581" width="93.2430%" height="15" fill="rgb(246,168,33)" fg:x="0" fg:w="432877"/><text x="0.2500%" y="591.50">gen`0x1080c9f83</text></g><g><title>gen`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (432,877 samples, 93.24%)</title><rect x="0.0000%" y="565" width="93.2430%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="432877"/><text x="0.2500%" y="575.50">gen`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>0x1 (432,930 samples, 93.25%)</title><rect x="0.0000%" y="709" width="93.2544%" height="15" fill="rgb(207,184,53)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="719.50">0x1</text></g><g><title>libdyld.dylib`start (432,930 samples, 93.25%)</title><rect x="0.0000%" y="693" width="93.2544%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="703.50">libdyld.dylib`start</text></g><g><title>gen`main (432,930 samples, 93.25%)</title><rect x="0.0000%" y="677" width="93.2544%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="687.50">gen`main</text></g><g><title>gen`std::rt::lang_start_internal (432,930 samples, 93.25%)</title><rect x="0.0000%" y="661" width="93.2544%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="671.50">gen`std::rt::lang_start_internal</text></g><g><title>gen`std::rt::lang_start::_{{closure}} (432,930 samples, 93.25%)</title><rect x="0.0000%" y="645" width="93.2544%" height="15" fill="rgb(251,22,52)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="655.50">gen`std::rt::lang_start::_{{closure}}</text></g><g><title>gen`std::sys_common::backtrace::__rust_begin_short_backtrace (432,930 samples, 93.25%)</title><rect x="0.0000%" y="629" width="93.2544%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="639.50">gen`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>gen`gen::main (432,930 samples, 93.25%)</title><rect x="0.0000%" y="613" width="93.2544%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="623.50">gen`gen::main</text></g><g><title>gen`nannou::app::Builder&lt;M,E&gt;::run (432,930 samples, 93.25%)</title><rect x="0.0000%" y="597" width="93.2544%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="432930"/><text x="0.2500%" y="607.50">gen`nannou::app::Builder&lt;M,E&gt;::run</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (7,666 samples, 1.65%)</title><rect x="93.4300%" y="693" width="1.6513%" height="15" fill="rgb(240,179,47)" fg:x="433745" fg:w="7666"/><text x="93.6800%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (112 samples, 0.02%)</title><rect x="95.1207%" y="645" width="0.0241%" height="15" fill="rgb(240,163,11)" fg:x="441594" fg:w="112"/><text x="95.3707%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (111 samples, 0.02%)</title><rect x="95.1209%" y="629" width="0.0239%" height="15" fill="rgb(236,37,12)" fg:x="441595" fg:w="111"/><text x="95.3709%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_drain_timers (153 samples, 0.03%)</title><rect x="95.1164%" y="661" width="0.0330%" height="15" fill="rgb(232,164,16)" fg:x="441574" fg:w="153"/><text x="95.3664%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_worker_thread (247 samples, 0.05%)</title><rect x="95.1035%" y="677" width="0.0532%" height="15" fill="rgb(244,205,15)" fg:x="441514" fg:w="247"/><text x="95.3535%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (57 samples, 0.01%)</title><rect x="95.3697%" y="645" width="0.0123%" height="15" fill="rgb(223,117,47)" fg:x="442750" fg:w="57"/><text x="95.6197%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (132 samples, 0.03%)</title><rect x="95.3594%" y="661" width="0.0284%" height="15" fill="rgb(244,107,35)" fg:x="442702" fg:w="132"/><text x="95.6094%" y="671.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (103 samples, 0.02%)</title><rect x="95.4640%" y="581" width="0.0222%" height="15" fill="rgb(205,140,8)" fg:x="443188" fg:w="103"/><text x="95.7140%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (299 samples, 0.06%)</title><rect x="95.4933%" y="517" width="0.0644%" height="15" fill="rgb(228,84,46)" fg:x="443324" fg:w="299"/><text x="95.7433%" y="527.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (327 samples, 0.07%)</title><rect x="95.4908%" y="533" width="0.0704%" height="15" fill="rgb(254,188,9)" fg:x="443312" fg:w="327"/><text x="95.7408%" y="543.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (374 samples, 0.08%)</title><rect x="95.4877%" y="549" width="0.0806%" height="15" fill="rgb(206,112,54)" fg:x="443298" fg:w="374"/><text x="95.7377%" y="559.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (407 samples, 0.09%)</title><rect x="95.4869%" y="565" width="0.0877%" height="15" fill="rgb(216,84,49)" fg:x="443294" fg:w="407"/><text x="95.7369%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (420 samples, 0.09%)</title><rect x="95.4867%" y="581" width="0.0905%" height="15" fill="rgb(214,194,35)" fg:x="443293" fg:w="420"/><text x="95.7367%" y="591.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (615 samples, 0.13%)</title><rect x="95.4604%" y="597" width="0.1325%" height="15" fill="rgb(249,28,3)" fg:x="443171" fg:w="615"/><text x="95.7104%" y="607.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (688 samples, 0.15%)</title><rect x="95.4543%" y="613" width="0.1482%" height="15" fill="rgb(222,56,52)" fg:x="443143" fg:w="688"/><text x="95.7043%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (84 samples, 0.02%)</title><rect x="95.6196%" y="597" width="0.0181%" height="15" fill="rgb(245,217,50)" fg:x="443910" fg:w="84"/><text x="95.8696%" y="607.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (103 samples, 0.02%)</title><rect x="95.6163%" y="613" width="0.0222%" height="15" fill="rgb(213,201,24)" fg:x="443895" fg:w="103"/><text x="95.8663%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (93 samples, 0.02%)</title><rect x="95.6469%" y="613" width="0.0200%" height="15" fill="rgb(248,116,28)" fg:x="444037" fg:w="93"/><text x="95.8969%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (70 samples, 0.02%)</title><rect x="95.6519%" y="597" width="0.0151%" height="15" fill="rgb(219,72,43)" fg:x="444060" fg:w="70"/><text x="95.9019%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1,048 samples, 0.23%)</title><rect x="95.4447%" y="629" width="0.2257%" height="15" fill="rgb(209,138,14)" fg:x="443098" fg:w="1048"/><text x="95.6947%" y="639.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (80 samples, 0.02%)</title><rect x="95.7609%" y="549" width="0.0172%" height="15" fill="rgb(222,18,33)" fg:x="444566" fg:w="80"/><text x="96.0109%" y="559.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (102 samples, 0.02%)</title><rect x="95.7598%" y="565" width="0.0220%" height="15" fill="rgb(213,199,7)" fg:x="444561" fg:w="102"/><text x="96.0098%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (5,271 samples, 1.14%)</title><rect x="95.8270%" y="501" width="1.1354%" height="15" fill="rgb(250,110,10)" fg:x="444873" fg:w="5271"/><text x="96.0770%" y="511.50"></text></g><g><title>IOKit`io_connect_method (5,292 samples, 1.14%)</title><rect x="95.8227%" y="517" width="1.1399%" height="15" fill="rgb(248,123,6)" fg:x="444853" fg:w="5292"/><text x="96.0727%" y="527.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (5,317 samples, 1.15%)</title><rect x="95.8197%" y="549" width="1.1453%" height="15" fill="rgb(206,91,31)" fg:x="444839" fg:w="5317"/><text x="96.0697%" y="559.50"></text></g><g><title>IOKit`IOConnectCallMethod (5,307 samples, 1.14%)</title><rect x="95.8218%" y="533" width="1.1431%" height="15" fill="rgb(211,154,13)" fg:x="444849" fg:w="5307"/><text x="96.0718%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.02%)</title><rect x="96.9688%" y="517" width="0.0174%" height="15" fill="rgb(225,148,7)" fg:x="450174" fg:w="81"/><text x="97.2188%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (81 samples, 0.02%)</title><rect x="96.9688%" y="501" width="0.0174%" height="15" fill="rgb(220,160,43)" fg:x="450174" fg:w="81"/><text x="97.2188%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.02%)</title><rect x="96.9686%" y="533" width="0.0179%" height="15" fill="rgb(213,52,39)" fg:x="450173" fg:w="83"/><text x="97.2186%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (100 samples, 0.02%)</title><rect x="96.9654%" y="549" width="0.0215%" height="15" fill="rgb(243,137,7)" fg:x="450158" fg:w="100"/><text x="97.2154%" y="559.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (5,524 samples, 1.19%)</title><rect x="95.7973%" y="565" width="1.1899%" height="15" fill="rgb(230,79,13)" fg:x="444735" fg:w="5524"/><text x="96.0473%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (186 samples, 0.04%)</title><rect x="96.9902%" y="565" width="0.0401%" height="15" fill="rgb(247,105,23)" fg:x="450273" fg:w="186"/><text x="97.2402%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (168 samples, 0.04%)</title><rect x="96.9941%" y="549" width="0.0362%" height="15" fill="rgb(223,179,41)" fg:x="450291" fg:w="168"/><text x="97.2441%" y="559.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (5,957 samples, 1.28%)</title><rect x="95.7510%" y="581" width="1.2832%" height="15" fill="rgb(218,9,34)" fg:x="444520" fg:w="5957"/><text x="96.0010%" y="591.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.8031) (49 samples, 0.01%)</title><rect x="97.0563%" y="533" width="0.0106%" height="15" fill="rgb(222,106,8)" fg:x="450580" fg:w="49"/><text x="97.3063%" y="543.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (50 samples, 0.01%)</title><rect x="97.0563%" y="549" width="0.0108%" height="15" fill="rgb(211,220,0)" fg:x="450580" fg:w="50"/><text x="97.3063%" y="559.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (77 samples, 0.02%)</title><rect x="97.0511%" y="565" width="0.0166%" height="15" fill="rgb(229,52,16)" fg:x="450556" fg:w="77"/><text x="97.3011%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (73 samples, 0.02%)</title><rect x="97.0770%" y="517" width="0.0157%" height="15" fill="rgb(212,155,18)" fg:x="450676" fg:w="73"/><text x="97.3270%" y="527.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer dealloc] (63 samples, 0.01%)</title><rect x="97.1173%" y="453" width="0.0136%" height="15" fill="rgb(242,21,14)" fg:x="450863" fg:w="63"/><text x="97.3673%" y="463.50"></text></g><g><title>AppleIntelICLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (133 samples, 0.03%)</title><rect x="97.1130%" y="469" width="0.0286%" height="15" fill="rgb(222,19,48)" fg:x="450843" fg:w="133"/><text x="97.3630%" y="479.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (162 samples, 0.03%)</title><rect x="97.1125%" y="485" width="0.0349%" height="15" fill="rgb(232,45,27)" fg:x="450841" fg:w="162"/><text x="97.3625%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeAllObjects] (185 samples, 0.04%)</title><rect x="97.1095%" y="501" width="0.0398%" height="15" fill="rgb(249,103,42)" fg:x="450827" fg:w="185"/><text x="97.3595%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (88 samples, 0.02%)</title><rect x="97.1513%" y="501" width="0.0190%" height="15" fill="rgb(246,81,33)" fg:x="451021" fg:w="88"/><text x="97.4013%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (85 samples, 0.02%)</title><rect x="97.1519%" y="485" width="0.0183%" height="15" fill="rgb(252,33,42)" fg:x="451024" fg:w="85"/><text x="97.4019%" y="495.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable didScheduledPresent] (306 samples, 0.07%)</title><rect x="97.1086%" y="517" width="0.0659%" height="15" fill="rgb(209,212,41)" fg:x="450823" fg:w="306"/><text x="97.3586%" y="527.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int) (503 samples, 0.11%)</title><rect x="97.0746%" y="533" width="0.1083%" height="15" fill="rgb(207,154,6)" fg:x="450665" fg:w="503"/><text x="97.3246%" y="543.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (577 samples, 0.12%)</title><rect x="97.0692%" y="549" width="0.1243%" height="15" fill="rgb(223,64,47)" fg:x="450640" fg:w="577"/><text x="97.3192%" y="559.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (586 samples, 0.13%)</title><rect x="97.0677%" y="565" width="0.1262%" height="15" fill="rgb(211,161,38)" fg:x="450633" fg:w="586"/><text x="97.3177%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (140 samples, 0.03%)</title><rect x="97.1980%" y="549" width="0.0302%" height="15" fill="rgb(219,138,40)" fg:x="451238" fg:w="140"/><text x="97.4480%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (136 samples, 0.03%)</title><rect x="97.1989%" y="533" width="0.0293%" height="15" fill="rgb(241,228,46)" fg:x="451242" fg:w="136"/><text x="97.4489%" y="543.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (183 samples, 0.04%)</title><rect x="97.1939%" y="565" width="0.0394%" height="15" fill="rgb(223,209,38)" fg:x="451219" fg:w="183"/><text x="97.4439%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (268 samples, 0.06%)</title><rect x="97.2364%" y="565" width="0.0577%" height="15" fill="rgb(236,164,45)" fg:x="451416" fg:w="268"/><text x="97.4864%" y="575.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (1,182 samples, 0.25%)</title><rect x="97.0397%" y="581" width="0.2546%" height="15" fill="rgb(231,15,5)" fg:x="450503" fg:w="1182"/><text x="97.2897%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (621 samples, 0.13%)</title><rect x="97.3633%" y="421" width="0.1338%" height="15" fill="rgb(252,35,15)" fg:x="452005" fg:w="621"/><text x="97.6133%" y="431.50"></text></g><g><title>IOKit`io_connect_method (637 samples, 0.14%)</title><rect x="97.3600%" y="437" width="0.1372%" height="15" fill="rgb(248,181,18)" fg:x="451990" fg:w="637"/><text x="97.6100%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (643 samples, 0.14%)</title><rect x="97.3596%" y="469" width="0.1385%" height="15" fill="rgb(233,39,42)" fg:x="451988" fg:w="643"/><text x="97.6096%" y="479.50"></text></g><g><title>IOKit`IOConnectCallMethod (642 samples, 0.14%)</title><rect x="97.3598%" y="453" width="0.1383%" height="15" fill="rgb(238,110,33)" fg:x="451989" fg:w="642"/><text x="97.6098%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (187 samples, 0.04%)</title><rect x="97.4992%" y="421" width="0.0403%" height="15" fill="rgb(233,195,10)" fg:x="452636" fg:w="187"/><text x="97.7492%" y="431.50"></text></g><g><title>IOKit`IOConnectCallMethod (192 samples, 0.04%)</title><rect x="97.4983%" y="453" width="0.0414%" height="15" fill="rgb(254,105,3)" fg:x="452632" fg:w="192"/><text x="97.7483%" y="463.50"></text></g><g><title>IOKit`io_connect_method (190 samples, 0.04%)</title><rect x="97.4987%" y="437" width="0.0409%" height="15" fill="rgb(221,225,9)" fg:x="452634" fg:w="190"/><text x="97.7487%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (221 samples, 0.05%)</title><rect x="97.4981%" y="469" width="0.0476%" height="15" fill="rgb(224,227,45)" fg:x="452631" fg:w="221"/><text x="97.7481%" y="479.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (927 samples, 0.20%)</title><rect x="97.3508%" y="485" width="0.1997%" height="15" fill="rgb(229,198,43)" fg:x="451947" fg:w="927"/><text x="97.6008%" y="495.50"></text></g><g><title>Metal`MTLDispatchListApply (1,014 samples, 0.22%)</title><rect x="97.3428%" y="501" width="0.2184%" height="15" fill="rgb(206,209,35)" fg:x="451910" fg:w="1014"/><text x="97.5928%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (1,125 samples, 0.24%)</title><rect x="97.3387%" y="517" width="0.2423%" height="15" fill="rgb(245,195,53)" fg:x="451891" fg:w="1125"/><text x="97.5887%" y="527.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (151 samples, 0.03%)</title><rect x="97.5840%" y="501" width="0.0325%" height="15" fill="rgb(240,92,26)" fg:x="453030" fg:w="151"/><text x="97.8340%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (878 samples, 0.19%)</title><rect x="97.6349%" y="469" width="0.1891%" height="15" fill="rgb(207,40,23)" fg:x="453266" fg:w="878"/><text x="97.8849%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (866 samples, 0.19%)</title><rect x="97.6375%" y="453" width="0.1865%" height="15" fill="rgb(223,111,35)" fg:x="453278" fg:w="866"/><text x="97.8875%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (71 samples, 0.02%)</title><rect x="97.8436%" y="405" width="0.0153%" height="15" fill="rgb(229,147,28)" fg:x="454235" fg:w="71"/><text x="98.0936%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.01%)</title><rect x="97.8455%" y="389" width="0.0134%" height="15" fill="rgb(211,29,28)" fg:x="454244" fg:w="62"/><text x="98.0955%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (87 samples, 0.02%)</title><rect x="97.8410%" y="421" width="0.0187%" height="15" fill="rgb(228,72,33)" fg:x="454223" fg:w="87"/><text x="98.0910%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (148 samples, 0.03%)</title><rect x="97.8354%" y="437" width="0.0319%" height="15" fill="rgb(205,214,31)" fg:x="454197" fg:w="148"/><text x="98.0854%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (174 samples, 0.04%)</title><rect x="97.8324%" y="453" width="0.0375%" height="15" fill="rgb(224,111,15)" fg:x="454183" fg:w="174"/><text x="98.0824%" y="463.50"></text></g><g><title>Metal`-[MTLIOAccelDevice kickCleanupQueue] (1,115 samples, 0.24%)</title><rect x="97.6306%" y="485" width="0.2402%" height="15" fill="rgb(253,21,26)" fg:x="453246" fg:w="1115"/><text x="97.8806%" y="495.50"></text></g><g><title>libdispatch.dylib`dispatch_async (210 samples, 0.05%)</title><rect x="97.8255%" y="469" width="0.0452%" height="15" fill="rgb(245,139,43)" fg:x="454151" fg:w="210"/><text x="98.0755%" y="479.50"></text></g><g><title>Metal`MTLDispatchListApply (59 samples, 0.01%)</title><rect x="97.8806%" y="469" width="0.0127%" height="15" fill="rgb(252,170,7)" fg:x="454407" fg:w="59"/><text x="98.1306%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (141 samples, 0.03%)</title><rect x="97.8707%" y="485" width="0.0304%" height="15" fill="rgb(231,118,14)" fg:x="454361" fg:w="141"/><text x="98.1207%" y="495.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (54 samples, 0.01%)</title><rect x="97.9203%" y="453" width="0.0116%" height="15" fill="rgb(238,83,0)" fg:x="454591" fg:w="54"/><text x="98.1703%" y="463.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageReset (161 samples, 0.03%)</title><rect x="97.9095%" y="469" width="0.0347%" height="15" fill="rgb(221,39,39)" fg:x="454541" fg:w="161"/><text x="98.1595%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_release (49 samples, 0.01%)</title><rect x="97.9336%" y="453" width="0.0106%" height="15" fill="rgb(222,119,46)" fg:x="454653" fg:w="49"/><text x="98.1836%" y="463.50"></text></g><g><title>Metal`MTLIOAccelCommandBufferStorageDealloc (265 samples, 0.06%)</title><rect x="97.9015%" y="485" width="0.0571%" height="15" fill="rgb(222,165,49)" fg:x="454504" fg:w="265"/><text x="98.1515%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (67 samples, 0.01%)</title><rect x="97.9442%" y="469" width="0.0144%" height="15" fill="rgb(219,113,52)" fg:x="454702" fg:w="67"/><text x="98.1942%" y="479.50"></text></g><g><title>Metal`-[MTLIOAccelCommandBuffer didCompleteWithStartTime:endTime:error:] (1,607 samples, 0.35%)</title><rect x="97.6278%" y="501" width="0.3462%" height="15" fill="rgb(214,7,15)" fg:x="453233" fg:w="1607"/><text x="97.8778%" y="511.50"></text></g><g><title>libobjc.A.dylib`class_conformsToProtocol (120 samples, 0.03%)</title><rect x="97.9812%" y="485" width="0.0258%" height="15" fill="rgb(235,32,4)" fg:x="454874" fg:w="120"/><text x="98.2312%" y="495.50"></text></g><g><title>libobjc.A.dylib`-[NSObject conformsToProtocol:] (131 samples, 0.03%)</title><rect x="97.9791%" y="501" width="0.0282%" height="15" fill="rgb(238,90,54)" fg:x="454864" fg:w="131"/><text x="98.2291%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (69 samples, 0.01%)</title><rect x="98.0080%" y="501" width="0.0149%" height="15" fill="rgb(213,208,19)" fg:x="454998" fg:w="69"/><text x="98.2580%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (2,091 samples, 0.45%)</title><rect x="97.5810%" y="517" width="0.4504%" height="15" fill="rgb(233,156,4)" fg:x="453016" fg:w="2091"/><text x="97.8310%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (53 samples, 0.01%)</title><rect x="98.0435%" y="517" width="0.0114%" height="15" fill="rgb(207,194,5)" fg:x="455163" fg:w="53"/><text x="98.2935%" y="527.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (77 samples, 0.02%)</title><rect x="98.0676%" y="485" width="0.0166%" height="15" fill="rgb(206,111,30)" fg:x="455275" fg:w="77"/><text x="98.3176%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (56 samples, 0.01%)</title><rect x="98.0851%" y="485" width="0.0121%" height="15" fill="rgb(243,70,54)" fg:x="455356" fg:w="56"/><text x="98.3351%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (152 samples, 0.03%)</title><rect x="98.0657%" y="501" width="0.0327%" height="15" fill="rgb(242,28,8)" fg:x="455266" fg:w="152"/><text x="98.3157%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (200 samples, 0.04%)</title><rect x="98.0579%" y="517" width="0.0431%" height="15" fill="rgb(219,106,18)" fg:x="455230" fg:w="200"/><text x="98.3079%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (96 samples, 0.02%)</title><rect x="98.1109%" y="517" width="0.0207%" height="15" fill="rgb(244,222,10)" fg:x="455476" fg:w="96"/><text x="98.3609%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (70 samples, 0.02%)</title><rect x="98.1165%" y="501" width="0.0151%" height="15" fill="rgb(236,179,52)" fg:x="455502" fg:w="70"/><text x="98.3665%" y="511.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (3,725 samples, 0.80%)</title><rect x="97.3324%" y="533" width="0.8024%" height="15" fill="rgb(213,23,39)" fg:x="451862" fg:w="3725"/><text x="97.5824%" y="543.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (292 samples, 0.06%)</title><rect x="98.1661%" y="485" width="0.0629%" height="15" fill="rgb(238,48,10)" fg:x="455732" fg:w="292"/><text x="98.4161%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (262 samples, 0.06%)</title><rect x="98.1725%" y="469" width="0.0564%" height="15" fill="rgb(251,196,23)" fg:x="455762" fg:w="262"/><text x="98.4225%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (358 samples, 0.08%)</title><rect x="98.1564%" y="501" width="0.0771%" height="15" fill="rgb(250,152,24)" fg:x="455687" fg:w="358"/><text x="98.4064%" y="511.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (454 samples, 0.10%)</title><rect x="98.1400%" y="517" width="0.0978%" height="15" fill="rgb(209,150,17)" fg:x="455611" fg:w="454"/><text x="98.3900%" y="527.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (505 samples, 0.11%)</title><rect x="98.1348%" y="533" width="0.1088%" height="15" fill="rgb(234,202,34)" fg:x="455587" fg:w="505"/><text x="98.3848%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (53 samples, 0.01%)</title><rect x="98.2619%" y="533" width="0.0114%" height="15" fill="rgb(253,148,53)" fg:x="456177" fg:w="53"/><text x="98.5119%" y="543.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (4,491 samples, 0.97%)</title><rect x="97.3187%" y="549" width="0.9674%" height="15" fill="rgb(218,129,16)" fg:x="451798" fg:w="4491"/><text x="97.5687%" y="559.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (4,526 samples, 0.97%)</title><rect x="97.3124%" y="565" width="0.9749%" height="15" fill="rgb(216,85,19)" fg:x="451769" fg:w="4526"/><text x="97.5624%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,282 samples, 0.28%)</title><rect x="98.2968%" y="565" width="0.2761%" height="15" fill="rgb(235,228,7)" fg:x="456339" fg:w="1282"/><text x="98.5468%" y="575.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (5,956 samples, 1.28%)</title><rect x="97.2956%" y="581" width="1.2829%" height="15" fill="rgb(245,175,0)" fg:x="451691" fg:w="5956"/><text x="97.5456%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (13,238 samples, 2.85%)</title><rect x="95.7441%" y="597" width="2.8515%" height="15" fill="rgb(208,168,36)" fg:x="444488" fg:w="13238"/><text x="95.9941%" y="607.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (13,431 samples, 2.89%)</title><rect x="95.7107%" y="613" width="2.8931%" height="15" fill="rgb(246,171,24)" fg:x="444333" fg:w="13431"/><text x="95.9607%" y="623.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_source_handler_dispose (51 samples, 0.01%)</title><rect x="98.6184%" y="613" width="0.0110%" height="15" fill="rgb(215,142,24)" fg:x="457832" fg:w="51"/><text x="98.8684%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (13,721 samples, 2.96%)</title><rect x="95.6766%" y="629" width="2.9555%" height="15" fill="rgb(250,187,7)" fg:x="444175" fg:w="13721"/><text x="95.9266%" y="639.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (15,023 samples, 3.24%)</title><rect x="95.4106%" y="645" width="3.2360%" height="15" fill="rgb(228,66,33)" fg:x="442940" fg:w="15023"/><text x="95.6606%" y="655.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (53 samples, 0.01%)</title><rect x="98.6466%" y="645" width="0.0114%" height="15" fill="rgb(234,215,21)" fg:x="457963" fg:w="53"/><text x="98.8966%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (82 samples, 0.02%)</title><rect x="98.6580%" y="645" width="0.0177%" height="15" fill="rgb(222,191,20)" fg:x="458016" fg:w="82"/><text x="98.9080%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (69 samples, 0.01%)</title><rect x="98.6608%" y="629" width="0.0149%" height="15" fill="rgb(245,79,54)" fg:x="458029" fg:w="69"/><text x="98.9108%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (15,242 samples, 3.28%)</title><rect x="95.3988%" y="661" width="3.2832%" height="15" fill="rgb(240,10,37)" fg:x="442885" fg:w="15242"/><text x="95.6488%" y="671.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (16,513 samples, 3.56%)</title><rect x="95.1608%" y="677" width="3.5570%" height="15" fill="rgb(214,192,32)" fg:x="441780" fg:w="16513"/><text x="95.4108%" y="687.50">libd..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (25,233 samples, 5.44%)</title><rect x="93.2827%" y="709" width="5.4353%" height="15" fill="rgb(209,36,54)" fg:x="433061" fg:w="25233"/><text x="93.5327%" y="719.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (16,875 samples, 3.63%)</title><rect x="95.0830%" y="693" width="3.6349%" height="15" fill="rgb(220,10,11)" fg:x="441419" fg:w="16875"/><text x="95.3330%" y="703.50">libs..</text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (48 samples, 0.01%)</title><rect x="98.7608%" y="565" width="0.0103%" height="15" fill="rgb(221,106,17)" fg:x="458493" fg:w="48"/><text x="99.0108%" y="575.50"></text></g><g><title>CoreFoundation`_CFMachPortBoostCreate (49 samples, 0.01%)</title><rect x="98.7608%" y="581" width="0.0106%" height="15" fill="rgb(251,142,44)" fg:x="458493" fg:w="49"/><text x="99.0108%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (118 samples, 0.03%)</title><rect x="98.7769%" y="517" width="0.0254%" height="15" fill="rgb(238,13,15)" fg:x="458568" fg:w="118"/><text x="99.0269%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (125 samples, 0.03%)</title><rect x="98.7756%" y="533" width="0.0269%" height="15" fill="rgb(208,107,27)" fg:x="458562" fg:w="125"/><text x="99.0256%" y="543.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (132 samples, 0.03%)</title><rect x="98.7752%" y="549" width="0.0284%" height="15" fill="rgb(205,136,37)" fg:x="458560" fg:w="132"/><text x="99.0252%" y="559.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (134 samples, 0.03%)</title><rect x="98.7750%" y="565" width="0.0289%" height="15" fill="rgb(250,205,27)" fg:x="458559" fg:w="134"/><text x="99.0250%" y="575.50"></text></g><g><title>CoreFoundation`_CFRelease (152 samples, 0.03%)</title><rect x="98.7731%" y="581" width="0.0327%" height="15" fill="rgb(210,80,43)" fg:x="458550" fg:w="152"/><text x="99.0231%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (63 samples, 0.01%)</title><rect x="98.8364%" y="533" width="0.0136%" height="15" fill="rgb(247,160,36)" fg:x="458844" fg:w="63"/><text x="99.0864%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (112 samples, 0.02%)</title><rect x="98.8332%" y="549" width="0.0241%" height="15" fill="rgb(234,13,49)" fg:x="458829" fg:w="112"/><text x="99.0832%" y="559.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (57 samples, 0.01%)</title><rect x="98.8648%" y="533" width="0.0123%" height="15" fill="rgb(234,122,0)" fg:x="458976" fg:w="57"/><text x="99.1148%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (118 samples, 0.03%)</title><rect x="98.8579%" y="549" width="0.0254%" height="15" fill="rgb(207,146,38)" fg:x="458944" fg:w="118"/><text x="99.1079%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (260 samples, 0.06%)</title><rect x="98.8862%" y="533" width="0.0560%" height="15" fill="rgb(207,177,25)" fg:x="459075" fg:w="260"/><text x="99.1362%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (274 samples, 0.06%)</title><rect x="98.8834%" y="549" width="0.0590%" height="15" fill="rgb(211,178,42)" fg:x="459062" fg:w="274"/><text x="99.1334%" y="559.50"></text></g><g><title>CoreFoundation`_CFRelease (50 samples, 0.01%)</title><rect x="98.9443%" y="549" width="0.0108%" height="15" fill="rgb(230,69,54)" fg:x="459345" fg:w="50"/><text x="99.1943%" y="559.50"></text></g><g><title>HIToolbox`PushToCGEventQueue(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (99 samples, 0.02%)</title><rect x="98.9622%" y="549" width="0.0213%" height="15" fill="rgb(214,135,41)" fg:x="459428" fg:w="99"/><text x="99.2122%" y="559.50"></text></g><g><title>libsystem_c.dylib`__dtoa (69 samples, 0.01%)</title><rect x="99.0402%" y="389" width="0.0149%" height="15" fill="rgb(237,67,25)" fg:x="459790" fg:w="69"/><text x="99.2902%" y="399.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (180 samples, 0.04%)</title><rect x="99.0259%" y="405" width="0.0388%" height="15" fill="rgb(222,189,50)" fg:x="459724" fg:w="180"/><text x="99.2759%" y="415.50"></text></g><g><title>libsystem_c.dylib`__v2printf (196 samples, 0.04%)</title><rect x="99.0231%" y="421" width="0.0422%" height="15" fill="rgb(245,148,34)" fg:x="459711" fg:w="196"/><text x="99.2731%" y="431.50"></text></g><g><title>libsystem_c.dylib`snprintf (204 samples, 0.04%)</title><rect x="99.0225%" y="469" width="0.0439%" height="15" fill="rgb(222,29,6)" fg:x="459708" fg:w="204"/><text x="99.2725%" y="479.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (203 samples, 0.04%)</title><rect x="99.0227%" y="453" width="0.0437%" height="15" fill="rgb(221,189,43)" fg:x="459709" fg:w="203"/><text x="99.2727%" y="463.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (202 samples, 0.04%)</title><rect x="99.0229%" y="437" width="0.0435%" height="15" fill="rgb(207,36,27)" fg:x="459710" fg:w="202"/><text x="99.2729%" y="447.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (247 samples, 0.05%)</title><rect x="99.0147%" y="485" width="0.0532%" height="15" fill="rgb(217,90,24)" fg:x="459672" fg:w="247"/><text x="99.2647%" y="495.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (278 samples, 0.06%)</title><rect x="99.0145%" y="501" width="0.0599%" height="15" fill="rgb(224,66,35)" fg:x="459671" fg:w="278"/><text x="99.2645%" y="511.50"></text></g><g><title>SkyLight`CGSEventLogEvent (345 samples, 0.07%)</title><rect x="99.0117%" y="517" width="0.0743%" height="15" fill="rgb(221,13,50)" fg:x="459658" fg:w="345"/><text x="99.2617%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (236 samples, 0.05%)</title><rect x="99.1097%" y="485" width="0.0508%" height="15" fill="rgb(236,68,49)" fg:x="460113" fg:w="236"/><text x="99.3597%" y="495.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (256 samples, 0.06%)</title><rect x="99.1082%" y="501" width="0.0551%" height="15" fill="rgb(229,146,28)" fg:x="460106" fg:w="256"/><text x="99.3582%" y="511.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (179 samples, 0.04%)</title><rect x="99.1843%" y="453" width="0.0386%" height="15" fill="rgb(225,31,38)" fg:x="460459" fg:w="179"/><text x="99.4343%" y="463.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (209 samples, 0.05%)</title><rect x="99.1834%" y="469" width="0.0450%" height="15" fill="rgb(250,208,3)" fg:x="460455" fg:w="209"/><text x="99.4334%" y="479.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (77 samples, 0.02%)</title><rect x="99.2366%" y="453" width="0.0166%" height="15" fill="rgb(246,54,23)" fg:x="460702" fg:w="77"/><text x="99.4866%" y="463.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (129 samples, 0.03%)</title><rect x="99.2284%" y="469" width="0.0278%" height="15" fill="rgb(243,76,11)" fg:x="460664" fg:w="129"/><text x="99.4784%" y="479.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (443 samples, 0.10%)</title><rect x="99.1683%" y="485" width="0.0954%" height="15" fill="rgb(245,21,50)" fg:x="460385" fg:w="443"/><text x="99.4183%" y="495.50"></text></g><g><title>SkyLight`CGSEventQueueEnqueueEvent (47 samples, 0.01%)</title><rect x="99.2644%" y="469" width="0.0101%" height="15" fill="rgb(228,9,43)" fg:x="460831" fg:w="47"/><text x="99.5144%" y="479.50"></text></g><g><title>SkyLight`handle_decoded_event(SLSEventRecord*, void*) (64 samples, 0.01%)</title><rect x="99.2638%" y="485" width="0.0138%" height="15" fill="rgb(208,100,47)" fg:x="460828" fg:w="64"/><text x="99.5138%" y="495.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (544 samples, 0.12%)</title><rect x="99.1636%" y="501" width="0.1172%" height="15" fill="rgb(232,26,8)" fg:x="460363" fg:w="544"/><text x="99.4136%" y="511.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (48 samples, 0.01%)</title><rect x="99.2881%" y="501" width="0.0103%" height="15" fill="rgb(216,166,38)" fg:x="460941" fg:w="48"/><text x="99.5381%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,416 samples, 0.31%)</title><rect x="99.3017%" y="501" width="0.3050%" height="15" fill="rgb(251,202,51)" fg:x="461004" fg:w="1416"/><text x="99.5517%" y="511.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (2,450 samples, 0.53%)</title><rect x="99.0871%" y="517" width="0.5277%" height="15" fill="rgb(254,216,34)" fg:x="460008" fg:w="2450"/><text x="99.3371%" y="527.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (2,939 samples, 0.63%)</title><rect x="98.9969%" y="533" width="0.6331%" height="15" fill="rgb(251,32,27)" fg:x="459589" fg:w="2939"/><text x="99.2469%" y="543.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (2,967 samples, 0.64%)</title><rect x="98.9911%" y="549" width="0.6391%" height="15" fill="rgb(208,127,28)" fg:x="459562" fg:w="2967"/><text x="99.2411%" y="559.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (3,881 samples, 0.84%)</title><rect x="98.8155%" y="565" width="0.8360%" height="15" fill="rgb(224,137,22)" fg:x="458747" fg:w="3881"/><text x="99.0655%" y="575.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (3,950 samples, 0.85%)</title><rect x="98.8080%" y="581" width="0.8508%" height="15" fill="rgb(254,70,32)" fg:x="458712" fg:w="3950"/><text x="99.0580%" y="591.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (4,221 samples, 0.91%)</title><rect x="98.7595%" y="597" width="0.9092%" height="15" fill="rgb(229,75,37)" fg:x="458487" fg:w="4221"/><text x="99.0095%" y="607.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (4,239 samples, 0.91%)</title><rect x="98.7582%" y="613" width="0.9131%" height="15" fill="rgb(252,64,23)" fg:x="458481" fg:w="4239"/><text x="99.0082%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (4,264 samples, 0.92%)</title><rect x="98.7543%" y="629" width="0.9185%" height="15" fill="rgb(232,162,48)" fg:x="458463" fg:w="4264"/><text x="99.0043%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (52 samples, 0.01%)</title><rect x="99.6808%" y="581" width="0.0112%" height="15" fill="rgb(246,160,12)" fg:x="462764" fg:w="52"/><text x="99.9308%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (59 samples, 0.01%)</title><rect x="99.6801%" y="597" width="0.0127%" height="15" fill="rgb(247,166,0)" fg:x="462761" fg:w="59"/><text x="99.9301%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_deallocate_trap (61 samples, 0.01%)</title><rect x="99.6980%" y="565" width="0.0131%" height="15" fill="rgb(249,219,21)" fg:x="462844" fg:w="61"/><text x="99.9480%" y="575.50"></text></g><g><title>libdispatch.dylib`_voucher_dealloc_mach_voucher (63 samples, 0.01%)</title><rect x="99.6980%" y="581" width="0.0136%" height="15" fill="rgb(205,209,3)" fg:x="462844" fg:w="63"/><text x="99.9480%" y="591.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (120 samples, 0.03%)</title><rect x="99.6931%" y="597" width="0.0258%" height="15" fill="rgb(243,44,1)" fg:x="462821" fg:w="120"/><text x="99.9431%" y="607.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (190 samples, 0.04%)</title><rect x="99.6793%" y="613" width="0.0409%" height="15" fill="rgb(206,159,16)" fg:x="462757" fg:w="190"/><text x="99.9293%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (1,324 samples, 0.29%)</title><rect x="99.6745%" y="629" width="0.2852%" height="15" fill="rgb(244,77,30)" fg:x="462735" fg:w="1324"/><text x="99.9245%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,095 samples, 0.24%)</title><rect x="99.7239%" y="613" width="0.2359%" height="15" fill="rgb(218,69,12)" fg:x="462964" fg:w="1095"/><text x="99.9739%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (48 samples, 0.01%)</title><rect x="99.9632%" y="597" width="0.0103%" height="15" fill="rgb(212,87,7)" fg:x="464075" fg:w="48"/><text x="100.2132%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (50 samples, 0.01%)</title><rect x="99.9632%" y="613" width="0.0108%" height="15" fill="rgb(245,114,25)" fg:x="464075" fg:w="50"/><text x="100.2132%" y="623.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (56 samples, 0.01%)</title><rect x="99.9625%" y="629" width="0.0121%" height="15" fill="rgb(210,61,42)" fg:x="464072" fg:w="56"/><text x="100.2125%" y="639.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (5,804 samples, 1.25%)</title><rect x="98.7317%" y="645" width="1.2502%" height="15" fill="rgb(211,52,33)" fg:x="458358" fg:w="5804"/><text x="98.9817%" y="655.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (5,895 samples, 1.27%)</title><rect x="98.7235%" y="661" width="1.2698%" height="15" fill="rgb(234,58,33)" fg:x="458320" fg:w="5895"/><text x="98.9735%" y="671.50"></text></g><g><title>AppKit`_NSEventThread (5,918 samples, 1.27%)</title><rect x="98.7194%" y="677" width="1.2748%" height="15" fill="rgb(220,115,36)" fg:x="458301" fg:w="5918"/><text x="98.9694%" y="687.50"></text></g><g><title>all (464,246 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(243,153,54)" fg:x="0" fg:w="464246"/><text x="0.2500%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (5,952 samples, 1.28%)</title><rect x="98.7179%" y="709" width="1.2821%" height="15" fill="rgb(251,47,18)" fg:x="458294" fg:w="5952"/><text x="98.9679%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (5,952 samples, 1.28%)</title><rect x="98.7179%" y="693" width="1.2821%" height="15" fill="rgb(242,102,42)" fg:x="458294" fg:w="5952"/><text x="98.9679%" y="703.50"></text></g></svg></svg>